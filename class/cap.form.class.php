<?php
/*
 *  Copyright (c) 2015  Guido Schratzer   <schratzerg@backbone.co.at>
 *  Copyright (c) 2015  Niklas Spanring   <n.spanring@backbone.co.at>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *	\file      	/class/cap.form.class.php
 *  \ingroup   	core
 *	\brief      JQuery Form to Insert Data to CAP-File and create config File
 */


/**
 *	Class to manage generation of HTML components
 *	Only common components must be here.
 *
 */

	class CAP_Form{
		
		var $version = '1.2';
		var $login_id = 0;
		/**
     * initialize Class with Data
     *
     * @param   string	$post			Array with Type/Tag of CAP 1.1
     * @return	None
     */
		function __construct($post = "")
		{
			if(is_array($post))
			{
				$this->output[] 			= $post['output'];
				$this->identifier[] 	= $post['identifier'];
				$this->sender[]				= $post['sender'];
				$this->sent[]					= $post['sent'];
				$this->status[]				= $post['status'];
				$this->msgType[]			= $post['msgType'];
				$this->references[]		= $post['references'];
				$this->scope[]				= $post['scope'];
				
				foreach($post['info'] as $key => $info)
				{
					
					$this->language[]			= $info['language'];
					$this->category[]			= $info['category'];
					$this->event[]				= $info['event'];
					$this->responseType[]	= $info['responseType'];
					$this->urgency[]			= $info['urgency'];
					$this->severity[]			= $info['severity'];
					$this->certainty[]		= $info['certainty'];
					$this->audience[]			= $info['audience'];
					$this->eventCode[]		= $info['eventCode'];
					$this->effective[]		= $info['effective'];
					$this->onset[]				= $info['onset'];
					$this->expires[]			= $info['expires'];
					$this->senderName[]		= $info['senderName'];
					$this->headline[]			= $info['headline'];
					$this->description[]	= $info['description'];
					$this->instruction[]	= $info['instruction'];
					$this->web[]					= $info['web'];
					$this->contact[]			= $info['contact'];
					$this->parameter[]		= $info['parameter'];
					
					foreach($info['area'] as $key2 => $area)
					{					
						$this->areaDesc[]			= $area['areaDesc'];
						$this->polygon[]			= $area['polygon'];
						$this->circle[]				= $area['circle'];
						$this->geocode[]			= $area['geocode'];
					}
				}
				
				$this->cap 					= $post;
			}
		}
		
		/*
		 * Function to Debug cap.create.class.php
		 *
		 * @return array 	$this 	All content of the Class
		 */	
		function Debug()
		{
			print '<pre>';
				print_r($this);
			print '</pre>';			
			exit;
		}
		
		function GetTypeStatusFromArray($status_theme, $getreq = 0)
		{
			$required = "";
			switch($status_theme) // if object have a value than its data-theme="f"
			{
				case 'O':
					$status_theme = 'data-theme="a"';
					break;
					
				case 'OD':
					$status_theme = 'data-theme="b"';
					break;
					
				case 'C':
					$status_theme = 'data-theme="e"';
					break;
					
				case 'R':
					$status_theme = 'data-theme="c"';
					$required = '';
					break;
					
				default:
					$status_theme = "";
					break;
			}
			
			if($getreq == 1) return $required;
			return $status_theme;
		}
		
    /**
     * Output input field for CAP 1.1 value's
     *
     * @param   string	$type			Type/Tag of CAP 1.1
     * @param   string	$lang			the language (in RFC 3066)
     * @return	string						HTML edit field
     */
		function InputStandard($type, $status_arr = "")
		{
			global $conf, $langs, $AreaCodesArray, $ParameterArray, $soap_SVG;
			
			$st['date'] = date('Y-m-d');
			$st['time'] = date('H:i:s');
			$st['zone'] = substr(date('P'), 1);
			
			/*
			Requirenes level
			key : theme : desc
			O   : A     : optional
			OD  : B     : optional (Dark)			
			C   : E     : conditional
			R   : C     : required
			*/
			
			if(is_array($status_arr))
			{
				$status_theme = $this->GetTypeStatusFromArray($status_arr[$type]);
			}
			
			switch($type)
			{
				case 'meteo_map':
					print_r($svgArray);
						$langs_arr = $this->getlang();	
							
						foreach($langs_arr as $key_l => $val_l)
						{
							if(in_array($key,$this->language)) unset($langs_arr[$key]);
						}
						foreach ($langs_arr as $key_l => $val_l) 
						{
							$langs_keys[] = $key_l;
						}

						$out = '<style>.ui-footer {display:none !important;}</style>';
						$out.= '<input type="hidden" value="MD" id="iso">';
						$out.= '<input type="hidden" value="2" id="green">';
						$out.= '<input type="hidden" value="'.$langs_keys[0].'" id="lang_0">';
						$out.= '<input type="hidden" value="'.$langs_keys[1].'" id="lang_1">';
						$out.= '<div class="ui-grid-a">';
							$out.= '<div class="ui-block-a" style="width: 30%;">';
								$out.= '<div class="ui-bar">';
									// Info
									$out.= '<ul data-role="listview" data-divider-theme="b" style="opacity: 0.5;" id="AreaDetailUL">'; // as long as it is without Area show 50% alpha
										$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">Area: <span id="left_area_name">None</span></h1></li>';
										
										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none;">';
											$out.= '<legend>'.$langs->trans($langs_arr[$langs_keys[0]]).': '.$this->tooltip($type, $langs->trans("LabelLanguage")).'</legend>';
										$out.= '</li>';
										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none;">';
											$out.= '<div class="lang_input" id="'.$langs_keys[0].'">';
													$out.= '<textarea id="desc_0" placeholder="description" name="description['.$langs_keys[0].']">'.$this->description[$i].'</textarea>';
													$out.= '<textarea id="inst_0" placeholder="instruction" name="instruction['.$langs_keys[0].']">'.$this->instruction[$i].'</textarea>';
											$out.= '</div>';
										$out.= '</li>';

										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none;">';
											$out.= '<legend>'.$langs->trans($langs_arr[$langs_keys[1]]).': '.$this->tooltip($type, $langs->trans("LabelLanguage")).'</legend>';
										$out.= '</li>';
										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none;">';
											
											$out.= '<div class="lang_input" id="'.$langs_keys[1].'">';
													$out.= '<textarea id="desc_1" placeholder="description" name="description['.$langs_keys[1].']">'.$this->description[$i].'</textarea>';
													$out.= '<textarea id="inst_1" placeholder="instruction" name="instruction['.$langs_keys[1].']">'.$this->instruction[$i].'</textarea>';
											$out.= '</div>';
										$out.= '</li>';

										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none;">';
											$out.= '<div class="ui-grid-a">';
												$out.= '<div class="ui-block-a">';
													$out.= '<legend>'.$langs->trans("From").': '.$this->tooltip($type, $langs->trans("LabelEffectiveDesc")).'</legend>';
													$out.= '<div class="input-group clockpicker" data-autoclose="true">';
														$out.= '<input '.$status_theme.' id="from_0" type="time" name="effective[time]" step="1" value="'.$st['time'].'">';
														$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
															$out.= '<span class="glyphicon glyphicon-time"></span>';
														$out.= '</span>';
													$out.= '</div>';
												$out.= '</div>';
												$out.= '<div class="ui-block-b">';
													$out.= '<legend>'.$langs->trans("To").': '.$this->tooltip($type, $langs->trans("LabelExpiresDesc")).'</legend>';
													$out.= '<div class="input-group clockpicker" data-autoclose="true">';
														$out.= '<input '.$status_theme.' id="to_0" type="time" name="expires[time]" step="1" value="'.$st['time'].'">';
														$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
															$out.= '<span class="glyphicon glyphicon-time"></span>';
														$out.= '</span>';
													$out.= '</div>';
												$out.= '</div>';
											$out.= '</div><!-- /grid-a -->';
										$out.= '</li>';

										$out.= '<li style="border: 1px solid #dddddd;margin-bottom:10px;">'; // solfe border problem: margin-bottom:10px;
											$out.= '<div class="ui-grid-a">';
												$out.= '<div class="ui-block-a">';
													$out.= '<a href="" data-role="button" class="ui-btn ui-shadow ui-corner-all ui-btn-a" style="background-color: #ff3f3f;color: black;text-shadow: none;border: 1px solid black;">';
														$out.= 'Delete';
													$out.= '</a>';
												$out.= '</div>';
												$out.= '<div class="ui-block-b">';
													$out.= '<a href="" data-role="button" class="ui-btn ui-shadow ui-corner-all ui-btn-a" style="background-color: #065c00;color: white;text-shadow: none;border: 1px solid black;">';
														$out.= 'Save';
													$out.= '</a>';
												$out.= '</div>';
											$out.= '</div><!-- /grid-a -->';
										$out.= '</li>';

									$out.= '</ul>';
								$out.= '</div>';
							$out.= '</div>';
							$out.= '<div class="ui-block-b" style="width: 70%;">';
								$out.= '<div class="ui-bar noselect">';
									// Map
									$out.= '<ul data-role="listview" data-divider-theme="b">';
										$out.= '<li data-role="list-divider" data-theme="b">';
											$out.= '<h1 style="font-size:22px;float:left;">Meteoalarm Visio Level</h1>';
										$out.= '</li>';
										
										$out.= '<li style="border: 1px solid #dddddd; border-bottom: none; padding: 0px;">';

											// dddddd, a4a4a4, 878787
											$out.= '<div id="awareness_toolbox" class="awareness_div">';
												for ($ty=1; $ty <= 13; $ty++) 
												{ 
													if($ty < 10) $ty = '0'.$ty;
													$out.= '<div class="awareness" id="left_box_type_'.$ty.'" aktive="1"><img src="includes/meteoalarm/warn-typs_'.$ty.'.png"></div>';
												}
											$out.= '</div>';

											$out.= '<div id="awareness_color_toolbox" class="awareness_color_div">';
												// 29d660, ffff00, fecb31, fe0104
												$out.= '<div class="awareness" id="left_box_level_1" aktive="1"></div>';
												$out.= '<div class="awareness" id="left_box_level_2" aktive="1"></div>';
												$out.= '<div class="awareness" id="left_box_level_3" aktive="1"></div>';
												$out.= '<div class="awareness" id="left_box_level_4" aktive="1"></div>';
											$out.= '</div>';

											$out.= '<div id="meteo_toolbox" class="meteo_toolbox_div_1">';
												$day_text[] = date('d.m.Y', strtotime('now'));
												$day_value[] = date('d.m.Y', strtotime('now'));
												$day_text[] = date('d.m.Y', strtotime('now + 1 day'));
												$day_value[] = date('d.m.Y', strtotime('now + 1 day'));
												$day_text[] = date('d.m.Y', strtotime('now + 2 day'));
												$day_value[] = date('d.m.Y', strtotime('now + 2 day'));
												//$out.= $this->buildSelectValueName('day', 'day', 'day', $day_text, $day_value, date('d.m.Y', strtotime('now')), 'meteo_day');
												$out.= $this->buildSelect("day", $day_text, "data-native-menu=\"false\" id=\"day\"", $langs->trans("Day"));
											$out.= '</div>';

											$out.= '<div id="meteo_toolbox" class="meteo_toolbox_div_2">';
												if(is_array($ParameterArray['AWT']))
												foreach($ParameterArray['AWT'] as $key => $area_arr)
												{
													$S_Param_AWT[$area_arr['id'].'&#59; '.$area_arr['hazard_type']] = $area_arr['hazard_type_DESC'];
													$G_Param_AWT[$area_arr['id'].'&#59; '.$area_arr['hazard_type']] = 'awareness_type'; //awareness_type awareness_level
												}
												//$out.= $this->buildSelectValueName('type', 'type', $G_Param_AWT, $S_Param_AWT, '');
												$out.= $this->buildSelect("type", $S_Param_AWT, "data-native-menu=\"false\" id=\"type\"", $langs->trans("Type"));
											$out.= '</div>';

											$out.= '<div id="meteo_toolbox" class="meteo_toolbox_div_3">';
												$out.= '<div class="awareness" id="reload" aktive="1"><img src="includes/meteoalarm/reload.png"></div>';
											$out.= '</div>';

											$out.= '<div id="work_toolbox" class="work_toolbox_div">';
												$out.= '<div class="awareness" id="Undo"><img src="includes/meteoalarm/undo.png"></div>';
												$out.= '<div class="awareness" id="Redo" aktive="0"><img src="includes/meteoalarm/redo.png"></div>';
												$out.= '<div class="awareness" id="Reset"><img src="includes/meteoalarm/reset.png"></div>';
											$out.= '</div>';

											$out.= '<div id="process_toolbox" class="process_toolbox_div"></div>';

											$out.= $soap_SVG; // SVG from the SOAP
											//$out.= '<svg id="svg-id" version="1.1" xmlns="http://www.w3.org/2000/svg" height="802" width="1855" style="width: 100%; overflow: hidden; border: 1px solid black;background-color:#CCCCCC;" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events"><g id="viewport-20160608095041679" class="svg-pan-zoom_viewport" transform="matrix(1.5008889990508054,0,0,1.5008889990508054,471.98550199376564,-69.5156128530782)"><polygon onmouseover="policlick(1045)" class="pol_1045" points="146.23,64.89 149.44,61.33 152.64,63.98 154.98,65.58 153.68,67.97 154.61,70.25 155.90,73.37 157.98,73.29 160.00,79.00 160.00,79.00 157.00,80.00 157.00,80.00 157.00,80.00 159.00,90.20 159.00,90.20 156.17,90.69 151.03,91.68 148.30,90.20 145.04,88.88 145.11,82.86 140.03,85.07 133.87,87.73 137.94,91.59 137.41,96.00 136.98,99.66 134.24,102.32 131.86,104.90 130.17,106.73 128.08,109.00 125.27,108.13 123.22,107.50 121.55,103.71 120.09,101.96 120.09,101.96 113.84,95.87 113.84,95.87 111.54,93.21 109.58,89.27 106.27,87.66 104.13,86.73 101.36,87.53 99.00,87.66 99.00,87.66 85.22,85.73 85.22,85.73 83.45,84.83 82.95,83.57 82.00,82.00 82.00,82.00 92.00,74.00 92.00,74.00 92.00,74.00 90.00,68.00 90.00,68.00 93.40,70.18 93.92,72.23 95.00,76.00 95.00,76.00 99.00,75.00 99.00,75.00 102.38,81.90 106.88,78.95 107.00,70.00 98.89,69.52 96.85,65.69 93.00,59.00 93.00,59.00 102.01,58.37 102.01,58.37 102.01,58.37 113.00,57.00 113.00,57.00 113.00,57.00 114.00,64.00 114.00,64.00 114.00,64.00 127.00,68.00 127.00,68.00 128.93,64.79 129.39,64.79 133.00,64.00 132.39,58.85 131.58,58.08 136.00,55.00 137.64,57.95 139.46,63.36 143.09,63.98" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1046)" class="pol_1046" points="162.61,70.79 170.20,67.40 171.00,77.00 171.00,77.00 168.00,76.00 168.00,76.00 168.49,79.51 169.34,84.91 171.56,87.70 177.13,94.70 182.58,90.66 191.00,100.00 184.63,105.75 189.80,111.02 188.84,117.96 188.27,122.03 179.57,126.53 176.00,129.00 176.00,129.00 175.00,126.00 175.00,126.00 175.00,126.00 171.00,131.00 171.00,131.00 171.00,131.00 164.00,125.00 164.00,125.00 158.88,128.98 152.98,131.72 155.00,139.00 147.61,142.78 145.40,139.37 147.00,132.00 147.00,132.00 142.00,133.00 142.00,133.00 142.00,133.00 136.94,124.09 136.94,124.09 132.30,116.79 132.44,121.87 131.77,112.00 131.68,110.24 131.30,108.85 131.77,107.04 132.77,102.90 136.32,102.25 137.70,97.96 139.37,92.74 134.76,88.73 139.24,85.85 140.25,85.43 141.58,85.25 142.70,85.85 145.07,86.52 145.18,89.50 147.43,90.98 150.97,93.32 157.29,90.96 161.00,90.00 161.00,90.00 158.00,81.00 158.00,81.00 158.00,81.00 161.03,80.00 161.03,80.00 160.66,77.94 159.93,75.31 161.03,73.39" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1047)" class="pol_1047" points="185.52,49.62 193.66,45.65 198.00,46.00 198.62,57.64 212.99,50.13 217.00,50.86 220.32,51.46 228.63,59.27 231.00,62.00 224.20,63.94 222.73,67.67 219.00,68.81 215.50,69.87 213.21,67.20 210.00,67.03 206.68,66.85 204.99,68.75 203.00,71.00 203.00,71.00 191.43,69.12 191.43,69.12 191.43,69.12 185.00,79.00 185.00,79.00 187.58,86.27 185.72,85.93 185.00,93.00 172.98,91.38 171.32,89.53 169.00,78.00 174.39,74.38 170.35,69.90 166.00,70.18 162.62,70.39 160.01,73.50 157.36,72.53 154.73,71.57 154.44,67.58 156.67,66.02 158.27,64.92 160.30,65.63 162.00,66.02 162.31,62.37 162.97,58.20 165.14,55.15 168.71,50.13 171.10,53.90 172.00,58.00 172.00,58.00 181.00,59.00 181.00,59.00 181.42,57.04 181.74,54.95 182.93,53.27" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1048)" class="pol_1048" points="189.33,74.23 189.94,71.13 191.56,70.06 194.02,68.45 197.39,70.78 199.96,70.92 203.82,71.12 205.14,67.90 209.01,67.60 212.49,67.33 214.91,69.92 218.00,69.38 221.28,68.81 224.58,64.57 227.96,63.63 231.85,62.55 233.81,66.17 232.77,68.95 231.19,73.13 227.25,71.89 224.00,78.00 230.53,77.03 234.93,77.77 238.00,84.00 232.30,85.66 220.06,90.56 216.39,95.04 213.27,98.86 213.55,101.50 211.28,104.58 207.62,109.52 206.97,107.66 204.00,115.00 204.00,115.00 209.00,119.00 209.00,119.00 209.00,119.00 208.00,121.00 208.00,121.00 199.52,118.09 203.48,119.98 198.00,119.28 187.80,117.98 187.89,104.60 189.11,102.41 189.86,101.07 190.84,100.75 192.00,100.00 192.00,100.00 186.00,96.00 186.00,96.00 186.02,90.37 187.20,81.36 188.80,76.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1049)" class="pol_1049" points="231.12,94.27 232.36,95.14 236.00,99.00 236.00,99.00 239.00,96.00 239.00,96.00 245.82,102.44 248.22,102.27 250.51,104.49 254.97,108.82 255.62,113.40 257.00,119.00 257.00,119.00 249.00,122.00 249.00,122.00 249.00,122.00 250.00,124.00 250.00,124.00 250.00,124.00 245.00,125.00 245.00,125.00 245.00,125.00 248.47,131.17 248.47,131.17 248.47,131.17 253.00,145.00 253.00,145.00 253.00,145.00 245.67,154.25 245.67,154.25 245.67,154.25 237.00,159.00 237.00,159.00 237.00,159.00 235.00,159.00 235.00,159.00 231.38,156.00 230.09,157.59 226.00,159.00 225.16,157.35 224.51,155.84 223.32,154.37 219.62,149.79 216.51,150.02 218.00,143.00 212.48,142.55 207.02,142.09 203.00,138.00 203.00,138.00 206.00,137.00 206.00,137.00 206.00,137.00 202.00,131.00 202.00,131.00 202.00,131.00 210.00,118.00 210.00,118.00 203.89,114.02 205.13,108.34 212.00,107.00 214.93,95.87 217.45,90.14 230.00,89.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1050)" class="pol_1050" points="236.00,70.28 244.00,72.79 244.00,72.79 247.77,73.37 252.39,72.44 255.26,75.65 258.33,79.09 255.12,83.31 258.18,86.50 260.56,88.99 262.32,86.74 264.00,85.00 270.33,87.55 266.57,90.96 270.31,93.01 272.49,94.21 275.10,92.59 277.00,91.57 282.13,88.82 283.05,87.93 288.84,87.00 289.82,90.36 290.57,93.59 288.84,96.79 287.42,98.95 284.87,100.39 284.15,102.16 283.60,103.53 283.89,104.94 285.32,105.60 289.68,107.62 290.83,99.63 294.95,99.63 296.50,99.63 297.68,100.71 298.13,102.14 298.87,104.50 297.21,106.46 297.45,108.42 297.64,109.95 301.00,115.05 302.00,117.00 305.41,113.92 305.63,113.57 306.00,109.00 311.26,109.75 319.91,111.58 322.00,117.00 322.00,117.00 311.00,117.00 311.00,117.00 311.00,117.00 298.00,133.00 298.00,133.00 288.48,129.19 286.17,135.51 281.00,127.00 270.54,135.91 268.58,132.24 257.00,131.72 250.23,131.42 250.22,132.41 246.00,126.00 246.00,126.00 251.00,125.00 251.00,125.00 251.00,125.00 250.00,122.00 250.00,122.00 250.00,122.00 258.00,120.00 258.00,120.00 256.45,113.64 256.06,108.47 250.59,103.69 247.50,101.00 245.94,102.49 238.00,95.00 238.00,95.00 235.00,98.00 235.00,98.00 235.00,98.00 230.00,88.00 230.00,88.00 234.26,85.67 236.05,84.60 241.00,85.00 237.79,78.82 231.68,76.65 225.00,77.00 226.83,74.24 232.57,69.94 236.00,70.28" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1051)" class="pol_1051" points="199.61,120.28 201.95,119.26 203.67,120.20 208.07,122.59 203.70,129.10 201.00,131.00 201.00,131.00 205.00,137.00 205.00,137.00 205.00,137.00 202.00,138.00 202.00,138.00 208.24,144.39 209.13,141.23 213.72,143.70 215.99,144.92 216.47,146.98 217.87,148.98 221.57,154.22 223.13,152.88 225.00,160.00 225.00,160.00 234.00,157.00 234.00,157.00 234.67,159.58 234.43,161.99 237.00,163.00 237.00,163.00 234.00,173.00 234.00,173.00 225.00,174.13 220.70,162.48 213.00,156.00 206.27,164.06 203.99,162.72 198.00,157.00 198.00,157.00 195.00,160.00 195.00,160.00 190.31,155.07 188.72,157.13 182.00,154.00 182.00,154.00 179.00,161.00 179.00,161.00 179.00,161.00 170.00,158.00 170.00,158.00 170.00,158.00 164.00,169.00 164.00,169.00 164.00,169.00 166.00,172.00 166.00,172.00 166.00,172.00 160.00,174.00 160.00,174.00 160.00,174.00 155.59,166.83 155.59,166.83 156.68,169.49 151.61,153.94 152.27,156.83 151.03,151.39 153.38,150.47 146.00,146.00 146.00,146.00 148.00,142.00 148.00,142.00 148.00,142.00 156.00,138.00 156.00,138.00 156.00,138.00 154.00,134.00 154.00,134.00 154.00,134.00 164.00,126.00 164.00,126.00 168.23,131.04 169.71,132.28 174.00,127.00 174.00,127.00 176.00,130.00 176.00,130.00 186.15,120.44 189.26,124.89 190.00,116.00 191.86,117.03 195.11,119.10 197.00,119.60" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1052)" class="pol_1052" points="195.00,161.00 199.00,158.00 199.00,158.00 205.76,164.68 204.33,163.11 214.00,157.00 216.89,159.65 220.86,163.88 221.28,168.00 221.52,170.27 217.88,178.63 216.28,180.35 215.04,181.69 213.58,182.23 212.00,183.00 212.00,183.00 209.00,178.00 209.00,178.00 209.00,178.00 203.61,188.00 203.61,188.00 202.51,190.61 202.64,193.04 201.33,194.39 198.83,196.94 195.06,194.36 191.00,195.57 187.28,196.69 181.32,202.48 177.04,203.56 173.51,204.46 172.20,201.76 169.88,199.58 162.58,192.72 162.84,188.92 159.00,180.00 159.00,180.00 161.93,175.50 161.93,175.50 164.61,171.82 167.30,172.03 165.00,167.00 165.00,167.00 170.00,159.00 170.00,159.00 170.00,159.00 179.00,163.00 179.00,163.00 179.00,163.00 182.00,155.00 182.00,155.00 187.38,157.02 191.75,156.39 195.00,161.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1053)" class="pol_1053" points="232.00,180.00 239.00,178.00 239.00,178.00 236.99,187.06 236.30,181.84 239.00,191.00 239.00,191.00 243.00,190.00 243.00,190.00 244.36,193.76 244.59,193.93 248.00,196.00 248.00,196.00 242.72,200.54 242.72,200.54 242.72,200.54 239.37,206.22 239.37,206.22 238.30,207.40 236.45,207.94 235.77,209.41 234.44,212.26 236.56,214.53 239.19,215.28 239.19,215.28 244.00,216.00 244.00,216.00 243.39,223.44 240.24,223.86 234.00,221.00 233.54,226.41 233.28,228.38 229.00,232.00 223.52,230.53 214.13,232.22 209.25,235.17 205.29,237.56 207.73,239.17 197.00,242.00 197.01,238.66 195.35,227.61 192.91,225.46 190.04,222.94 187.80,225.43 184.70,221.76 180.82,217.17 179.69,209.20 177.00,204.00 177.00,204.00 190.00,196.56 190.00,196.56 190.00,196.56 201.48,195.22 201.48,195.22 201.48,195.22 204.10,188.00 204.10,188.00 204.10,188.00 210.00,179.00 210.00,179.00 210.00,179.00 212.00,184.00 212.00,184.00 219.08,179.46 217.56,179.03 221.00,172.00 227.20,174.39 228.96,173.72 232.00,180.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1054)" class="pol_1054" points="251.00,165.00 250.00,167.00 250.00,167.00 250.00,167.00 253.00,168.00 253.00,168.00 247.80,174.32 239.78,177.24 232.00,179.00 232.00,179.00 231.00,175.00 231.00,175.00 233.93,172.23 233.88,172.00 234.00,168.00 234.00,168.00 242.00,169.00 242.00,169.00 244.49,163.87 245.47,162.74 251.00,165.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1054)" class="pol_1054" points="228.00,173.00 222.00,172.00 222.00,172.00 222.00,172.00 223.00,169.00 223.00,169.00 223.00,169.00 228.00,173.00 228.00,173.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1055)" class="pol_1055" points="273.00,175.00 274.00,176.00 274.00,176.00 274.00,176.00 274.00,175.00 274.00,175.00 274.00,175.00 273.00,175.00 273.00,175.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1055)" class="pol_1055" points="261.77,161.49 260.75,162.63 266.00,160.00 266.00,160.00 268.00,171.00 268.00,171.00 268.00,171.00 278.00,171.00 278.00,171.00 278.00,171.00 274.00,173.00 274.00,173.00 274.00,173.00 274.00,175.00 274.00,175.00 274.00,175.00 279.00,179.00 279.00,179.00 284.00,178.52 293.57,182.89 295.03,188.18 295.03,188.18 295.03,198.00 295.03,198.00 295.03,198.00 292.00,198.00 292.00,198.00 291.94,200.63 292.06,205.31 289.49,206.95 287.86,207.90 283.93,207.16 282.00,206.95 269.04,205.52 276.37,206.33 265.00,206.95 265.00,206.95 266.00,226.00 266.00,226.00 266.00,226.00 260.00,227.00 260.00,227.00 260.00,227.00 259.00,224.00 259.00,224.00 259.00,224.00 254.00,230.00 254.00,230.00 250.65,222.89 249.09,223.32 242.00,225.00 242.00,225.00 245.00,215.00 245.00,215.00 245.00,215.00 237.00,215.00 237.00,215.00 237.00,215.00 235.00,209.00 235.00,209.00 242.42,207.01 239.99,205.25 242.93,201.49 242.93,201.49 249.00,196.00 249.00,196.00 244.75,193.54 244.24,192.72 243.00,188.00 243.00,188.00 239.00,189.00 239.00,189.00 237.66,184.95 237.14,183.46 241.00,181.00 241.00,181.00 240.00,178.00 240.00,178.00 240.00,178.00 254.00,168.00 254.00,168.00 254.00,168.00 251.00,167.00 251.00,167.00 248.96,160.50 244.43,163.79 242.00,168.00 237.64,166.26 238.23,164.83 236.00,161.00 236.00,161.00 241.00,156.00 241.00,156.00 241.00,156.00 241.00,158.00 241.00,158.00 246.79,154.35 247.19,153.62 251.00,148.00 253.82,151.52 255.02,153.40 255.00,158.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1056)" class="pol_1056" points="314.37,121.87 311.06,124.44 310.82,126.96 310.74,127.81 310.89,128.64 311.54,129.26 314.18,131.77 317.06,125.60 318.00,124.00 318.00,124.00 328.53,126.02 328.53,126.02 328.53,126.02 337.00,134.00 337.00,134.00 335.17,136.53 335.07,136.25 332.00,136.00 332.00,136.00 327.00,139.00 327.00,139.00 326.99,145.84 326.81,150.85 318.01,150.31 315.64,150.17 314.08,148.91 311.72,149.31 304.65,150.50 298.13,156.32 296.00,163.00 296.00,163.00 304.00,162.00 304.00,162.00 306.79,166.90 310.03,171.23 309.00,177.00 309.00,177.00 307.00,176.00 307.00,176.00 306.19,177.61 305.47,179.25 304.20,180.57 302.57,182.27 301.23,182.60 298.99,182.93 287.73,184.56 288.60,178.41 279.00,178.00 279.00,178.00 275.00,174.00 275.00,174.00 275.00,174.00 280.00,170.00 280.00,170.00 280.00,170.00 269.00,170.00 269.00,170.00 269.00,170.00 266.00,159.00 266.00,159.00 261.17,161.86 260.58,160.69 256.00,158.00 255.68,150.76 250.93,150.86 255.00,143.00 250.55,140.33 251.21,137.78 250.00,133.00 250.00,133.00 257.00,132.46 257.00,132.46 257.00,132.46 272.58,133.01 272.58,133.01 272.58,133.01 281.00,128.00 281.00,128.00 286.87,137.40 289.60,128.39 299.00,135.00 300.75,124.53 304.67,128.74 311.00,118.00 311.00,118.00 316.00,119.00 316.00,119.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1057)" class="pol_1057" points="341.00,132.00 346.06,139.00 346.06,139.00 345.77,140.94 345.12,143.94 346.06,145.69 348.64,150.16 355.87,146.48 360.00,154.00 360.00,154.00 354.00,162.00 354.00,162.00 346.95,161.87 349.12,164.44 345.37,167.01 343.71,168.15 341.62,167.91 340.13,168.59 336.47,170.52 338.88,175.12 340.13,178.00 340.13,178.00 327.00,175.00 327.00,175.00 323.34,182.81 318.38,182.39 312.49,176.39 310.00,173.85 306.02,164.58 305.00,161.00 305.00,161.00 297.00,162.00 297.00,162.00 298.96,155.92 305.53,150.57 312.00,150.02 313.97,149.85 326.39,153.84 327.93,144.96 327.93,144.96 327.93,140.00 327.93,140.00 327.93,140.00 332.00,137.00 332.00,137.00 337.10,136.50 337.03,134.62 341.00,132.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1058)" class="pol_1058" points="317.98,190.31 320.84,189.83 328.00,193.00 328.00,193.00 328.00,191.00 328.00,191.00 328.00,191.00 331.00,192.00 331.00,192.00 331.00,192.00 331.00,209.00 331.00,209.00 321.08,214.65 311.93,216.85 314.00,230.00 314.00,230.00 306.00,231.56 306.00,231.56 306.00,231.56 300.00,234.09 300.00,234.09 300.00,234.09 293.00,232.69 293.00,232.69 293.00,232.69 279.00,231.04 279.00,231.04 279.00,231.04 268.02,227.55 268.02,227.55 268.02,227.55 266.00,207.74 266.00,207.74 273.13,206.55 271.56,206.25 279.00,207.74 281.30,207.77 287.65,208.85 289.58,207.74 292.37,206.31 292.75,201.78 293.00,199.00 293.00,199.00 297.00,201.00 297.00,201.00 297.00,201.00 295.00,192.00 295.00,192.00 296.76,188.75 295.95,187.44 295.00,184.00 301.88,183.82 303.41,182.99 307.00,177.00 315.08,177.97 313.95,178.61 321.00,182.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1059)" class="pol_1059" points="369.09,157.72 367.01,161.42 366.22,164.00 366.22,164.00 363.70,178.00 363.70,178.00 363.61,181.66 366.19,186.95 366.58,189.99 366.86,193.12 365.51,194.38 366.58,197.15 367.67,199.72 370.05,201.35 370.70,204.17 371.70,208.58 369.98,211.44 366.00,213.00 366.00,213.00 362.00,203.00 362.00,203.00 362.00,203.00 355.00,200.00 355.00,200.00 350.89,206.78 345.94,205.89 339.00,205.00 339.00,205.00 340.00,202.00 340.00,202.00 334.42,200.09 330.44,197.21 333.00,191.00 329.28,190.85 318.66,191.64 320.79,185.07 320.79,185.07 327.00,176.00 327.00,176.00 327.00,176.00 341.00,179.00 341.00,179.00 341.00,179.00 338.00,170.00 338.00,170.00 344.95,167.93 345.64,169.28 349.00,162.00 349.00,162.00 355.00,163.00 355.00,163.00 355.00,163.00 358.00,155.00 358.00,155.00 358.00,155.00 360.00,154.00 360.00,154.00 360.00,154.00 364.00,157.00 364.00,157.00 364.00,157.00 359.00,150.00 359.00,150.00 362.32,150.52 367.15,151.33 368.30,155.11" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1060)" class="pol_1060" points="241.00,224.00 240.00,227.00 240.00,227.00 251.61,222.12 249.06,225.11 256.00,232.00 256.00,232.00 257.00,225.00 257.00,225.00 257.00,225.00 259.00,225.00 259.00,225.00 262.77,228.32 263.45,226.50 266.94,228.46 272.41,231.53 271.24,237.90 270.00,243.00 270.00,243.00 267.00,242.00 267.00,242.00 264.21,246.39 262.03,247.77 257.00,249.00 257.00,249.00 260.00,257.00 260.00,257.00 260.00,257.00 254.72,261.29 254.72,261.29 251.58,263.49 247.00,263.84 245.65,268.04 244.88,270.44 246.45,274.43 247.00,277.00 247.00,277.00 242.00,277.00 242.00,277.00 242.21,278.89 242.50,284.26 243.16,285.63 245.25,289.94 248.73,288.29 249.00,298.00 249.00,298.00 255.00,299.00 255.00,299.00 255.00,299.00 255.00,304.00 255.00,304.00 247.81,303.29 249.74,303.39 244.00,299.49 241.95,298.09 239.57,297.23 237.74,295.52 230.80,289.03 233.58,287.24 223.00,283.00 224.28,273.19 220.62,272.42 218.49,265.00 217.66,262.10 218.00,258.86 215.14,256.91 214.12,256.22 206.57,255.16 205.00,255.00 200.61,249.20 200.46,249.25 199.00,242.00 209.75,238.61 208.69,233.25 222.00,232.35 226.29,232.06 225.69,231.17 230.00,233.00 230.00,233.00 235.00,223.00 235.00,223.00 235.00,223.00 241.00,224.00 241.00,224.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1060)" class="pol_1060" points="265.00,256.00 261.00,256.00 261.00,256.00 261.00,256.00 265.00,256.00 265.00,256.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1061)" class="pol_1061" points="286.00,233.38 292.00,233.38 292.00,233.38 292.00,233.38 299.00,234.64 299.00,234.64 299.00,234.64 308.00,232.00 308.00,232.00 308.59,238.57 309.65,241.87 315.00,246.00 315.00,246.00 314.00,252.00 314.00,252.00 310.06,252.21 310.00,252.66 308.00,256.00 303.94,256.18 302.80,257.14 300.00,260.00 307.11,262.22 305.47,265.92 305.00,272.00 305.00,272.00 299.00,268.00 299.00,268.00 299.00,268.00 296.00,278.00 296.00,278.00 296.00,278.00 283.00,280.00 283.00,280.00 278.19,275.42 275.71,276.53 270.28,274.54 270.28,274.54 264.00,272.00 264.00,272.00 264.00,272.00 255.00,262.00 255.00,262.00 255.00,262.00 266.00,255.00 266.00,255.00 266.00,255.00 261.00,255.00 261.00,255.00 258.67,248.12 261.73,249.24 267.00,243.00 267.00,243.00 271.00,244.00 271.00,244.00 271.83,237.67 272.57,236.47 271.00,230.00 271.00,230.00 286.00,233.38 286.00,233.38" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1062)" class="pol_1062" points="345.42,208.28 352.00,205.81 355.00,201.00 355.00,201.00 361.00,204.00 361.00,204.00 361.00,204.00 366.00,214.00 366.00,214.00 366.00,214.00 371.00,212.00 371.00,212.00 377.26,220.02 386.92,221.14 378.62,230.69 377.14,232.38 376.95,232.27 375.00,233.00 375.00,233.00 374.00,238.00 374.00,238.00 374.00,238.00 371.00,233.00 371.00,233.00 371.00,233.00 371.00,239.00 371.00,239.00 371.00,239.00 367.00,239.00 367.00,239.00 371.88,245.26 371.69,245.78 369.00,253.00 361.37,252.83 358.60,254.87 354.00,261.00 354.00,261.00 344.00,260.00 344.00,260.00 342.81,269.05 343.20,265.56 345.00,274.00 345.00,274.00 342.00,269.00 342.00,269.00 342.00,269.00 338.00,270.00 338.00,270.00 338.00,270.00 338.00,265.00 338.00,265.00 325.94,263.97 330.94,259.34 324.00,255.00 324.00,255.00 323.00,247.00 323.00,247.00 323.00,247.00 315.00,249.00 315.00,249.00 315.94,244.97 304.39,236.67 311.29,231.47 311.29,231.47 316.00,229.00 316.00,229.00 309.07,219.13 325.78,211.65 333.00,209.00 330.57,204.38 330.79,202.98 332.00,198.00 332.00,198.00 340.26,205.10 340.26,205.10" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1062)" class="pol_1062" points="374.00,234.00 375.00,235.00 375.00,235.00 375.00,235.00 375.00,234.00 375.00,234.00 375.00,234.00 374.00,234.00 374.00,234.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1062)" class="pol_1062" points="373.00,235.00 374.00,236.00 374.00,236.00 374.00,236.00 374.00,235.00 374.00,235.00 374.00,235.00 373.00,235.00 373.00,235.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1063)" class="pol_1063" points="249.90,259.51 260.64,266.17 263.00,273.00 263.00,273.00 282.00,279.00 282.00,279.00 282.00,279.00 281.00,283.00 281.00,283.00 281.00,283.00 277.00,282.00 277.00,282.00 277.42,284.99 278.14,288.28 280.90,290.08 282.97,291.43 285.71,290.07 286.71,292.36 287.63,294.47 285.45,296.86 285.79,300.00 286.00,301.94 288.14,305.86 289.00,308.00 289.00,308.00 279.00,308.00 279.00,308.00 279.00,308.00 278.00,324.00 278.00,324.00 275.89,322.77 273.37,320.65 270.96,320.64 268.13,320.51 264.31,322.66 261.59,320.64 259.14,318.93 261.59,315.94 259.24,312.21 258.02,310.28 255.58,309.08 254.92,306.79 254.45,304.67 255.91,302.53 254.92,300.27 254.08,298.59 252.06,297.76 250.94,296.32 250.94,296.32 248.40,291.10 248.40,291.10 244.45,284.18 243.65,289.88 243.00,278.00 243.00,278.00 248.00,278.00 248.00,278.00 247.35,274.93 245.36,270.13 246.60,267.22" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1064)" class="pol_1064" points="323.00,256.00 330.77,263.56 330.77,263.56 330.77,263.56 337.00,266.00 337.00,266.00 337.00,266.00 338.00,271.00 338.00,271.00 338.00,271.00 341.00,270.00 341.00,270.00 344.72,277.93 341.50,275.92 340.26,281.42 339.71,283.86 340.60,282.97 339.00,288.00 339.00,288.00 328.00,282.00 328.00,282.00 328.00,282.00 334.00,292.00 334.00,292.00 329.10,292.40 328.76,292.85 325.00,296.00 325.00,296.00 328.00,301.00 328.00,301.00 323.73,301.23 323.60,302.22 322.00,306.00 322.00,306.00 326.00,308.00 326.00,308.00 320.07,307.94 313.59,299.39 312.00,294.00 307.88,296.68 307.60,296.57 303.00,295.00 303.00,295.00 302.00,298.00 302.00,298.00 295.28,294.31 295.65,293.66 288.00,295.00 287.26,287.93 284.17,291.86 280.57,289.15 278.80,287.82 278.50,285.98 278.00,284.00 278.00,284.00 281.00,285.00 281.00,285.00 283.30,279.14 291.36,277.90 297.00,279.00 297.00,279.00 300.00,276.00 300.00,276.00 300.00,276.00 299.00,270.00 299.00,270.00 299.00,270.00 306.00,274.00 306.00,274.00 306.22,271.51 305.40,268.93 308.00,268.00 308.00,268.00 302.00,258.00 302.00,258.00 306.70,256.46 307.45,256.38 310.00,252.00 310.00,252.00 316.00,253.00 316.00,253.00 316.00,253.00 315.00,250.00 315.00,250.00 315.00,250.00 321.00,248.00 321.00,248.00 321.00,248.00 323.00,256.00 323.00,256.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1065)" class="pol_1065" points="391.00,247.00 400.00,243.00 400.00,243.00 399.40,244.41 399.26,245.26 398.13,246.47 395.15,249.66 386.25,252.58 382.00,252.00 382.00,252.00 387.00,261.00 387.00,261.00 387.00,261.00 380.00,266.00 380.00,266.00 380.00,266.00 378.98,255.21 378.98,255.21 378.98,255.21 373.40,249.61 373.40,249.61 373.40,249.61 369.00,240.00 369.00,240.00 369.00,240.00 377.00,238.00 377.00,238.00 377.00,238.00 378.00,233.00 378.00,233.00 384.53,237.37 387.50,239.87 391.00,247.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1065)" class="pol_1065" points="401.00,245.00 401.00,244.00 401.00,244.00 401.00,244.00 403.00,242.00 403.00,242.00 403.00,242.00 401.00,245.00 401.00,245.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1066)" class="pol_1066" points="358.18,281.14 360.80,284.19 358.00,287.00 358.69,288.05 359.04,289.12 360.33,289.72 360.33,289.72 370.83,288.83 370.83,288.83 372.21,288.47 373.71,287.47 375.17,287.42 378.82,287.27 381.07,290.40 383.00,293.00 378.67,294.51 378.30,294.76 374.00,293.00 374.00,293.00 372.00,298.00 372.00,298.00 372.00,298.00 367.00,297.00 367.00,297.00 367.00,297.00 368.00,304.00 368.00,304.00 368.00,304.00 366.00,304.00 366.00,304.00 366.00,304.00 371.00,308.00 371.00,308.00 371.00,308.00 370.00,312.00 370.00,312.00 366.54,316.37 369.63,318.65 374.00,320.00 374.00,320.00 373.00,331.00 373.00,331.00 367.50,331.00 357.09,331.42 353.31,326.66 350.39,322.98 351.74,318.69 348.57,315.57 346.19,313.22 343.47,313.36 341.61,312.03 341.61,312.03 326.00,295.00 326.00,295.00 332.54,291.46 335.43,293.15 332.00,286.00 332.00,286.00 339.00,290.00 339.00,290.00 341.49,282.88 344.33,282.95 350.00,287.00 350.92,284.45 351.88,282.00 355.00,281.58" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1067)" class="pol_1067" points="379.00,268.00 386.00,262.00 386.00,262.00 393.25,268.71 390.01,273.32 384.05,279.28 384.05,279.28 378.83,284.42 378.83,284.42 375.93,286.58 375.10,285.88 372.00,289.00 372.00,289.00 359.00,289.00 359.00,289.00 361.38,281.25 355.89,277.76 350.00,285.00 350.00,285.00 340.00,282.00 340.00,282.00 341.28,279.58 344.48,275.18 344.81,273.00 345.16,270.77 343.77,268.03 344.24,265.05 345.14,259.44 349.56,262.01 352.83,260.71 355.48,259.66 358.21,255.70 362.00,254.11 364.54,253.23 367.35,253.81 370.00,254.11 370.00,254.11 371.00,250.00 371.00,250.00 380.39,254.98 379.00,254.24 379.00,268.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1068)" class="pol_1068" points="302.00,299.00 305.00,296.00 305.00,296.00 305.00,296.00 310.37,303.29 310.37,303.29 310.37,303.29 317.00,313.00 317.00,313.00 318.12,322.67 332.70,327.96 335.94,332.22 341.38,339.37 334.08,337.27 338.00,348.00 329.02,354.94 332.13,356.26 323.00,354.00 323.00,354.00 325.00,367.00 325.00,367.00 325.00,367.00 310.00,367.00 310.00,367.00 306.83,361.52 304.02,360.93 298.00,360.00 298.00,360.00 294.00,366.00 294.00,366.00 296.73,369.45 296.60,371.76 297.00,376.00 297.00,376.00 287.00,378.00 287.00,378.00 287.10,372.21 285.30,372.19 280.00,372.00 280.00,372.00 276.00,359.00 276.00,359.00 271.61,355.91 272.72,354.49 270.65,350.00 268.36,345.05 265.82,343.84 264.77,340.91 263.27,336.70 266.02,337.56 262.00,330.00 262.00,330.00 264.00,328.00 264.00,328.00 264.00,328.00 260.00,326.00 260.00,326.00 262.56,323.02 268.63,319.81 272.72,321.27 272.72,321.27 279.00,325.00 279.00,325.00 279.00,325.00 280.00,309.00 280.00,309.00 283.87,308.34 284.65,307.71 288.00,310.00 288.00,310.00 287.00,295.00 287.00,295.00 294.93,295.51 294.97,293.79 302.00,299.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1069)" class="pol_1069" points="313.60,298.96 320.67,307.83 324.09,308.00 325.60,308.07 326.29,307.30 327.00,307.00 327.00,307.00 323.00,305.00 323.00,305.00 323.00,305.00 324.00,301.00 324.00,301.00 335.81,302.80 333.53,304.67 340.61,311.69 343.33,314.39 345.45,313.70 347.57,315.59 349.53,317.35 351.63,326.14 352.00,329.00 362.91,330.55 366.59,334.21 379.00,331.00 379.00,331.00 382.53,345.00 382.53,345.00 383.00,349.93 380.55,357.43 375.98,359.83 373.95,360.89 367.71,361.51 365.00,362.00 363.79,359.20 361.48,346.24 355.96,352.33 355.96,352.33 354.23,355.02 354.23,355.02 354.23,355.02 352.00,359.00 352.00,359.00 346.61,356.54 338.48,350.17 337.31,344.01 336.61,340.34 341.63,336.97 335.32,330.51 332.32,327.43 317.21,322.50 318.00,313.00 313.64,310.41 312.04,309.04 314.00,304.00 314.00,304.00 306.00,298.00 306.00,298.00 306.00,298.00 312.00,296.00 312.00,296.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1070)" class="pol_1070" points="417.00,300.00 416.00,300.00 416.00,300.00 416.00,300.00 414.00,298.00 414.00,298.00 414.00,298.00 416.00,306.00 416.00,306.00 416.00,306.00 406.00,306.00 406.00,306.00 407.92,309.91 411.65,316.90 416.96,315.89 419.99,315.31 422.42,311.33 425.70,313.23 428.24,314.71 427.42,317.62 427.66,320.00 427.66,320.00 430.00,330.00 430.00,330.00 430.00,330.00 419.00,333.00 419.00,333.00 421.38,340.67 417.54,338.85 413.00,339.65 408.56,340.44 409.32,341.70 404.00,341.00 404.00,341.00 407.00,344.00 407.00,344.00 403.05,350.09 397.58,346.49 399.00,355.00 399.00,355.00 394.00,357.00 394.00,357.00 390.30,350.70 390.35,349.77 383.00,351.00 383.00,351.00 385.00,345.00 385.00,345.00 380.89,340.23 380.80,336.03 380.00,330.00 380.00,330.00 374.00,331.00 374.00,331.00 374.00,331.00 375.00,319.00 375.00,319.00 369.04,318.53 366.53,314.94 371.00,313.00 371.00,313.00 370.00,310.00 370.00,310.00 370.00,310.00 374.00,311.00 374.00,311.00 374.00,311.00 371.00,304.00 371.00,304.00 382.44,304.00 379.93,303.21 387.00,311.00 389.22,304.54 393.06,301.30 400.00,302.00 400.00,302.00 403.00,299.00 403.00,299.00 399.98,293.17 401.78,291.08 403.00,285.00 412.58,287.25 415.78,289.69 417.00,300.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1071)" class="pol_1071" points="314.01,367.86 317.63,366.16 319.78,369.43 321.15,372.43 320.36,377.75 319.78,381.00 319.78,381.00 319.78,393.00 319.78,393.00 319.40,396.75 318.07,397.54 318.00,402.00 318.00,402.00 314.00,410.00 314.00,410.00 322.92,411.53 320.62,418.84 318.00,425.00 318.00,425.00 307.00,419.00 307.00,419.00 307.00,419.00 311.00,417.00 311.00,417.00 309.80,415.47 307.81,412.41 305.60,412.42 302.30,412.45 296.05,425.71 292.68,415.94 292.68,415.94 292.00,413.00 292.00,413.00 292.00,413.00 280.00,417.00 280.00,417.00 280.00,417.00 283.00,406.00 283.00,406.00 283.00,406.00 280.00,405.00 280.00,405.00 280.00,405.00 277.92,392.58 277.92,392.58 277.92,392.58 280.00,373.00 280.00,373.00 280.00,373.00 287.00,373.00 287.00,373.00 287.00,373.00 286.00,379.00 286.00,379.00 286.00,379.00 299.00,376.00 299.00,376.00 299.00,376.00 295.00,365.00 295.00,365.00 295.00,365.00 299.00,361.00 299.00,361.00 309.37,362.60 307.31,365.12 311.21,366.71" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1072)" class="pol_1072" points="354.85,353.54 357.72,347.71 363.23,356.00 363.23,356.00 363.23,362.00 363.23,362.00 363.23,362.00 368.00,378.00 368.00,378.00 368.00,378.00 379.08,376.00 379.08,376.00 379.08,376.00 379.08,383.00 379.08,383.00 379.92,390.85 381.42,394.58 372.00,397.00 371.73,395.59 371.59,394.37 371.00,393.20 367.60,385.27 363.22,391.81 361.41,393.20 359.78,394.77 358.86,395.10 357.00,396.00 357.00,396.00 358.00,399.00 358.00,399.00 358.00,399.00 348.00,405.00 348.00,405.00 348.00,405.00 350.00,409.00 350.00,409.00 340.28,412.45 335.79,406.37 327.00,402.83 322.67,401.09 319.53,402.16 318.85,399.84 318.30,397.97 320.59,396.18 320.79,392.00 320.79,392.00 320.79,384.00 320.79,384.00 320.79,384.00 320.79,368.00 320.79,368.00 320.79,368.00 326.00,368.00 326.00,368.00 326.00,368.00 324.00,355.00 324.00,355.00 332.28,356.67 329.81,355.11 338.00,348.00 343.87,353.55 345.31,356.50 353.00,360.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1073)" class="pol_1073" points="452.16,345.60 456.21,350.28 455.75,355.00 455.27,359.87 452.35,360.85 449.73,364.21 449.73,364.21 446.00,370.00 446.00,370.00 437.05,368.12 438.24,376.13 432.00,373.00 432.00,373.00 422.00,381.00 422.00,381.00 424.96,384.66 423.68,385.58 421.00,389.00 421.00,389.00 427.00,395.00 427.00,395.00 427.00,395.00 422.00,402.00 422.00,402.00 422.00,402.00 420.00,402.00 420.00,402.00 420.00,402.00 417.00,393.00 417.00,393.00 417.00,393.00 413.00,394.00 413.00,394.00 413.00,394.00 414.00,399.00 414.00,399.00 409.92,402.83 410.81,403.92 412.00,409.00 402.60,409.73 408.34,416.07 400.00,415.00 403.58,407.89 403.04,408.06 401.00,400.00 401.00,400.00 405.00,398.00 405.00,398.00 405.00,398.00 402.00,384.00 402.00,384.00 402.00,384.00 392.00,386.00 392.00,386.00 392.00,386.00 393.00,392.00 393.00,392.00 393.00,392.00 381.00,392.00 381.00,392.00 381.00,392.00 380.00,375.00 380.00,375.00 380.00,375.00 369.00,377.00 369.00,377.00 369.00,377.00 364.00,363.00 364.00,363.00 371.54,361.65 378.87,362.24 381.00,353.00 387.98,350.39 390.65,350.15 393.00,358.00 393.00,358.00 400.00,356.00 400.00,356.00 398.53,349.05 401.16,348.91 408.00,346.00 408.00,346.00 407.00,343.00 407.00,343.00 407.00,343.00 421.00,338.00 421.00,338.00 421.00,338.00 429.00,340.19 429.00,340.19 436.02,342.51 439.86,345.30 444.00,337.00 444.00,337.00 452.00,339.00 452.00,339.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1074)" class="pol_1074" points="426.30,338.99 422.39,338.65 420.00,333.00 428.88,331.01 430.07,329.97 432.00,340.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1075)" class="pol_1075" points="318.38,99.13 326.03,104.41 328.00,108.00 332.23,106.78 344.86,105.28 346.96,110.13 349.93,117.03 342.95,119.71 352.00,127.00 352.00,127.00 358.00,136.00 358.00,136.00 363.25,131.59 364.89,136.10 370.00,137.87 372.27,138.48 374.67,138.13 377.00,137.87 377.96,129.97 384.91,129.19 386.83,131.58 388.37,133.49 389.76,145.98 390.00,149.00 393.73,147.94 395.53,146.85 399.00,149.00 396.54,150.97 388.53,158.69 392.85,162.05 393.74,162.75 398.40,162.75 400.00,163.00 400.00,163.00 397.45,169.83 397.45,169.83 395.95,172.61 393.65,174.19 393.36,177.01 393.36,177.01 394.49,184.00 394.49,184.00 394.49,184.00 393.46,191.00 393.46,191.00 393.46,191.00 393.46,195.00 393.46,195.00 392.75,201.32 387.25,204.70 382.00,207.00 382.00,207.00 386.00,216.00 386.00,216.00 386.00,216.00 390.00,214.00 390.00,214.00 391.09,220.17 391.49,220.40 387.00,225.00 390.21,226.93 390.21,227.39 391.00,231.00 391.00,231.00 396.00,225.00 396.00,225.00 396.00,225.00 399.00,232.00 399.00,232.00 401.54,227.80 402.49,227.64 407.00,226.00 407.00,226.00 409.00,240.00 409.00,240.00 409.00,240.00 416.00,238.00 416.00,238.00 416.00,238.00 417.00,252.00 417.00,252.00 417.00,252.00 429.00,251.00 429.00,251.00 427.38,241.77 428.67,240.32 438.00,239.00 438.00,239.00 442.00,258.00 442.00,258.00 442.00,258.00 436.00,259.00 436.00,259.00 436.00,259.00 440.00,280.00 440.00,280.00 440.00,280.00 431.00,281.00 431.00,281.00 431.00,281.00 435.00,292.00 435.00,292.00 436.41,288.44 440.86,285.32 444.15,288.61 445.51,289.97 446.43,294.07 447.00,296.00 447.00,296.00 443.00,296.00 443.00,296.00 443.00,303.06 445.09,309.37 438.00,311.00 438.00,311.00 440.00,316.00 440.00,316.00 440.00,316.00 449.00,313.00 449.00,313.00 449.00,313.00 450.00,319.00 450.00,319.00 450.00,319.00 459.00,316.00 459.00,316.00 459.00,316.00 463.00,329.00 463.00,329.00 463.00,329.00 479.00,324.00 479.00,324.00 479.00,324.00 482.00,336.00 482.00,336.00 482.00,336.00 488.00,332.00 488.00,332.00 487.96,335.38 487.81,335.15 485.00,337.00 486.54,339.31 489.53,343.48 490.31,346.00 490.59,347.11 490.56,356.66 490.31,358.00 490.00,360.50 488.71,362.29 488.66,365.00 488.56,370.38 493.19,373.41 487.00,377.00 487.00,377.00 488.00,382.00 488.00,382.00 488.00,382.00 481.00,383.00 481.00,383.00 481.00,383.00 482.00,380.00 482.00,380.00 482.00,380.00 470.00,375.00 470.00,375.00 470.00,375.00 469.00,378.00 469.00,378.00 469.00,378.00 463.00,376.00 463.00,376.00 463.00,376.00 465.98,370.00 465.98,370.00 470.55,360.71 458.96,363.16 454.00,362.00 457.94,352.63 456.30,350.05 452.00,341.00 452.00,341.00 454.00,339.00 454.00,339.00 454.00,339.00 442.00,335.00 442.00,335.00 442.00,335.00 443.00,339.00 443.00,339.00 432.66,345.98 432.50,338.20 430.91,330.00 430.91,330.00 428.43,321.00 428.43,321.00 428.43,321.00 428.43,316.10 428.43,316.10 427.09,307.94 418.97,315.39 415.97,315.44 410.92,315.53 408.29,310.05 407.00,306.00 412.19,306.40 416.60,308.13 416.00,301.00 416.00,301.00 419.00,294.00 419.00,294.00 419.00,294.00 411.79,287.58 411.79,287.58 411.79,287.58 404.00,284.00 404.00,284.00 404.00,284.00 406.00,280.00 406.00,280.00 406.00,280.00 400.00,274.00 400.00,274.00 404.78,270.29 411.14,262.33 414.00,257.00 414.00,257.00 410.00,255.00 410.00,255.00 405.20,263.66 403.42,259.58 397.83,263.42 396.11,264.61 393.79,267.29 391.45,266.51 389.58,265.89 383.92,255.18 383.00,253.00 388.64,252.76 396.25,249.20 400.00,245.00 400.00,245.00 407.00,239.00 407.00,239.00 407.00,239.00 406.00,238.00 406.00,238.00 406.00,238.00 402.00,243.00 402.00,243.00 402.00,243.00 391.00,246.00 391.00,246.00 386.15,237.70 381.31,235.89 380.16,232.91 378.54,228.67 384.02,226.60 381.41,222.04 379.76,219.14 374.62,216.39 372.75,213.70 370.24,210.08 372.47,207.52 371.38,204.09 370.40,201.03 367.54,199.71 367.02,195.99 366.70,193.75 367.66,192.37 367.02,189.00 366.36,185.46 364.32,181.63 364.39,178.00 364.39,178.00 366.30,167.00 366.30,167.00 367.44,159.90 370.47,157.73 368.30,154.11 365.39,149.24 351.49,147.46 346.00,147.00 346.39,135.29 344.42,141.06 342.00,131.00 342.00,131.00 339.00,132.08 339.00,132.08 331.60,134.04 332.68,127.70 328.70,125.17 327.02,124.10 319.61,123.47 317.00,123.00 315.67,127.44 315.06,129.66 310.00,129.00 310.00,129.00 318.00,117.00 318.00,117.00 321.62,118.44 322.67,115.35 319.80,113.21 317.07,111.17 310.38,109.01 307.00,108.00 307.00,108.00 308.00,103.00 308.00,103.00 309.71,101.84 312.03,99.96 314.09,99.69" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1076)" class="pol_1076" points="451.44,363.33 463.77,363.33 463.77,363.33 465.29,363.72 466.19,364.57 466.43,366.13 466.95,369.56 463.05,373.60 461.00,376.00 461.00,376.00 470.00,379.00 470.00,379.00 470.00,379.00 471.00,376.00 471.00,376.00 471.00,376.00 481.00,381.00 481.00,381.00 482.07,388.17 487.18,390.94 494.00,391.00 494.00,391.00 498.39,399.69 498.39,399.69 498.39,399.69 504.00,405.00 504.00,405.00 508.74,402.26 509.63,402.80 513.00,407.00 513.00,407.00 509.00,411.88 509.00,411.88 500.30,408.29 503.41,411.63 497.00,411.88 494.25,411.83 493.39,410.90 491.28,410.48 486.98,409.63 483.75,413.61 482.00,417.00 482.00,417.00 474.00,413.00 474.00,413.00 473.28,409.47 469.05,400.70 465.89,398.90 464.42,398.05 463.54,398.18 462.00,398.00 462.00,398.00 464.00,403.00 464.00,403.00 459.56,404.83 458.71,405.04 454.00,404.00 454.00,404.00 457.00,417.00 457.00,417.00 447.04,419.87 445.56,419.06 444.00,408.00 432.01,407.40 436.73,403.49 431.79,397.95 427.99,393.69 426.36,393.96 422.00,388.00 425.10,384.34 424.95,384.34 423.00,380.00 426.75,377.28 429.61,374.28 434.00,377.00 437.41,372.29 439.94,368.51 446.00,371.00 447.09,369.03 449.52,364.31 451.44,363.33" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1077)" class="pol_1077" points="296.06,424.74 302.00,414.36 304.36,413.40 307.26,412.22 308.77,414.99 310.00,417.00 310.00,417.00 306.00,420.00 306.00,420.00 306.00,420.00 314.00,424.00 314.00,424.00 312.02,430.31 311.60,433.38 319.00,435.00 319.00,435.00 319.00,450.00 319.00,450.00 319.00,450.00 315.01,450.72 315.01,450.72 306.91,453.08 312.14,455.95 313.00,464.00 313.00,464.00 305.00,463.00 305.00,463.00 305.00,463.00 304.00,471.00 304.00,471.00 304.00,471.00 301.00,468.00 301.00,468.00 301.00,468.00 298.00,469.00 298.00,469.00 295.51,465.33 291.02,460.98 286.04,462.17 282.33,463.06 281.72,466.45 277.90,467.57 274.82,468.47 269.38,467.27 266.00,467.00 266.00,467.00 267.78,456.58 267.78,456.58 267.78,456.58 265.38,447.00 265.38,447.00 265.38,447.00 268.00,436.00 268.00,436.00 272.95,434.54 273.93,433.00 277.00,429.00 277.00,429.00 274.00,428.00 274.00,428.00 274.00,428.00 277.00,417.00 277.00,417.00 277.00,417.00 292.00,415.00 292.00,415.00 292.22,415.98 292.26,416.90 292.73,417.85" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1078)" class="pol_1078" points="370.97,394.30 370.94,394.47 370.00,400.00 370.00,400.00 376.00,401.00 376.00,401.00 376.00,401.00 364.00,402.00 364.00,402.00 364.00,402.00 371.79,425.00 371.79,425.00 371.79,425.00 368.00,437.00 368.00,437.00 368.00,437.00 360.00,433.06 360.00,433.06 360.00,433.06 342.00,436.00 342.00,436.00 342.00,436.00 341.00,429.00 341.00,429.00 344.54,428.06 355.16,426.54 356.94,423.57 359.49,419.32 351.19,408.81 349.00,405.00 349.00,405.00 359.00,399.00 359.00,399.00 359.00,399.00 358.00,396.00 358.00,396.00 358.00,396.00 369.00,389.00 369.00,389.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1079)" class="pol_1079" points="382.00,450.00 368.00,468.00 368.00,468.00 372.83,471.78 377.49,478.19 370.73,483.07 369.22,484.16 364.95,485.36 363.00,486.00 363.00,486.00 359.00,469.00 359.00,469.00 359.00,469.00 368.00,467.00 368.00,467.00 368.00,467.00 365.63,457.00 365.63,457.00 365.63,457.00 374.00,443.00 374.00,443.00 374.00,443.00 382.00,450.00 382.00,450.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1079)" class="pol_1079" points="310.00,474.00 315.00,486.00 315.00,486.00 315.00,486.00 323.00,484.00 323.00,484.00 323.00,484.00 324.00,490.00 324.00,490.00 324.00,490.00 315.00,490.00 315.00,490.00 315.00,490.00 317.00,495.00 317.00,495.00 317.00,495.00 325.00,493.00 325.00,493.00 325.00,493.00 326.00,496.00 326.00,496.00 326.00,496.00 343.00,492.00 343.00,492.00 343.00,492.00 339.00,477.00 339.00,477.00 339.00,477.00 347.00,475.00 347.00,475.00 347.00,475.00 350.00,489.00 350.00,489.00 346.75,491.82 346.00,492.58 345.63,497.00 345.47,498.99 346.03,502.80 344.97,504.28 343.70,506.04 339.09,506.85 337.00,507.37 337.00,507.37 317.00,512.00 317.00,512.00 317.00,512.00 319.00,518.00 319.00,518.00 319.00,518.00 323.00,518.00 323.00,518.00 323.00,518.00 323.00,521.00 323.00,521.00 323.00,521.00 338.00,518.00 338.00,518.00 338.00,518.00 339.00,524.00 339.00,524.00 332.27,525.78 330.89,526.21 324.00,525.00 324.75,529.53 325.37,530.54 322.00,534.00 322.00,534.00 317.00,521.00 317.00,521.00 317.00,521.00 310.00,521.00 310.00,521.00 308.49,516.59 307.21,516.89 303.00,518.00 303.00,518.00 303.00,512.00 303.00,512.00 303.00,512.00 300.00,513.00 300.00,513.00 300.00,513.00 299.00,509.00 299.00,509.00 303.38,507.10 304.32,506.86 307.00,511.00 307.00,511.00 314.00,509.00 314.00,509.00 314.00,509.00 312.00,503.00 312.00,503.00 312.00,503.00 309.00,504.00 309.00,504.00 309.00,504.00 305.38,486.00 305.38,486.00 305.38,486.00 307.00,474.00 307.00,474.00 307.00,474.00 310.00,474.00 310.00,474.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1080)" class="pol_1080" points="269.32,562.42 264.73,560.11 264.85,556.13 264.96,552.23 269.66,553.80 272.11,549.85 273.93,546.99 272.71,537.47 272.11,534.00 271.18,528.91 266.61,524.16 265.84,515.00 265.26,511.05 267.62,507.24 265.84,498.00 264.24,487.75 260.76,486.25 263.36,475.00 265.83,464.32 271.23,470.02 276.98,468.56 280.91,467.56 281.80,464.76 284.37,463.41 289.71,460.59 295.22,465.12 297.00,470.00 297.00,470.00 300.00,469.00 300.00,469.00 300.00,469.00 305.00,472.00 305.00,472.00 305.00,472.00 306.00,464.00 306.00,464.00 310.15,464.60 311.44,464.49 314.00,468.00 314.00,468.00 311.00,469.00 311.00,469.00 314.47,471.74 314.56,472.08 319.00,472.00 319.00,472.00 321.00,477.00 321.00,477.00 321.00,477.00 314.00,480.00 314.00,480.00 311.29,476.04 310.74,474.46 306.00,473.00 306.00,473.00 304.64,487.00 304.64,487.00 304.64,487.00 308.00,504.00 308.00,504.00 302.31,506.97 299.21,506.90 299.00,514.00 299.00,514.00 302.00,513.00 302.00,513.00 302.00,513.00 302.00,519.00 302.00,519.00 302.00,519.00 308.00,517.00 308.00,517.00 308.00,517.00 309.00,522.00 309.00,522.00 316.87,522.09 317.65,524.41 320.00,532.00 320.00,532.00 305.01,535.82 305.01,535.82 305.01,535.82 295.00,535.00 295.00,535.00 295.00,535.00 293.00,530.00 293.00,530.00 293.00,530.00 289.00,531.00 289.00,531.00 289.00,531.00 291.00,542.00 291.00,542.00 291.00,542.00 289.00,542.00 289.00,542.00 289.00,542.00 293.00,556.00 293.00,556.00 293.00,556.00 288.00,558.00 288.00,558.00 288.00,558.00 289.23,565.83 289.23,565.83 289.23,565.83 279.00,580.00 279.00,580.00 279.00,580.00 277.00,580.00 277.00,580.00 272.56,571.89 273.73,568.70 271.28,565.21" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1080)" class="pol_1080" points="309.90,546.92 314.22,546.33 316.00,546.00 316.00,546.00 319.00,557.00 319.00,557.00 319.00,557.00 307.00,563.00 307.00,563.00 307.01,559.93 306.40,549.86 308.60,548.01" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1081)" class="pol_1081" points="311.00,504.00 313.00,508.00 313.00,508.00 313.00,508.00 307.00,510.00 307.00,510.00 307.00,510.00 305.00,506.00 305.00,506.00 305.00,506.00 311.00,504.00 311.00,504.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1081)" class="pol_1081" points="325.00,402.86 342.00,410.48 342.00,410.48 346.50,411.81 348.94,409.65 351.61,411.11 354.42,412.64 358.00,420.51 355.96,423.44 354.56,425.46 343.26,427.77 340.00,429.00 340.00,429.00 341.00,438.00 341.00,438.00 344.21,436.28 357.63,432.93 361.00,433.77 363.14,434.30 365.26,436.17 367.00,437.51 368.76,438.86 371.69,440.70 371.98,443.09 372.38,446.51 366.44,452.33 365.34,456.00 364.46,458.92 366.29,462.96 367.00,466.00 367.00,466.00 358.00,468.00 358.00,468.00 358.00,468.00 362.00,486.00 362.00,486.00 362.00,486.00 351.00,489.00 351.00,489.00 351.00,489.00 348.00,474.00 348.00,474.00 348.00,474.00 338.00,476.00 338.00,476.00 338.00,476.00 342.00,491.00 342.00,491.00 342.00,491.00 327.00,495.00 327.00,495.00 327.00,495.00 326.00,492.00 326.00,492.00 326.00,492.00 318.00,494.00 318.00,494.00 318.00,494.00 317.00,491.00 317.00,491.00 317.00,491.00 325.00,491.00 325.00,491.00 325.00,491.00 324.00,482.00 324.00,482.00 324.00,482.00 316.00,485.00 316.00,485.00 315.34,479.71 317.59,479.04 322.00,477.00 322.00,477.00 320.00,471.00 320.00,471.00 316.54,471.51 315.98,471.99 313.00,470.00 313.00,470.00 316.00,469.00 316.00,469.00 314.77,466.69 310.34,454.67 311.87,452.90 313.35,451.20 317.89,451.10 320.00,451.00 320.00,451.00 319.00,433.00 319.00,433.00 312.43,433.83 313.42,429.91 314.00,425.00 314.00,425.00 319.00,426.00 319.00,426.00 320.69,418.49 323.74,413.38 315.00,409.00 315.00,409.00 316.00,402.86 316.00,402.86 316.00,402.86 325.00,402.86 325.00,402.86" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1081)" class="pol_1081" points="346.00,506.00 349.00,514.00 349.00,514.00 342.49,516.40 330.78,519.85 324.00,520.00 324.00,520.00 324.00,517.00 324.00,517.00 320.04,516.32 319.89,515.88 319.00,512.00 319.00,512.00 346.00,506.00 346.00,506.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon><polygon onmouseover="policlick(1081)" class="pol_1081" points="294.00,536.00 299.00,535.00 299.00,535.00 303.18,538.06 309.72,536.02 315.00,536.00 315.00,536.00 312.00,546.00 312.00,546.00 310.40,546.35 308.85,546.48 307.61,547.74 305.43,549.96 306.26,560.93 307.00,564.00 307.00,564.00 309.00,564.00 309.00,564.00 311.59,559.29 314.85,558.58 320.00,559.00 320.00,559.00 313.00,561.00 313.00,561.00 313.00,561.00 316.00,574.00 316.00,574.00 316.00,574.00 305.00,577.00 305.00,577.00 303.65,569.11 298.35,570.90 293.22,567.01 290.41,564.87 289.97,562.20 289.00,559.00 289.00,559.00 294.00,557.00 294.00,557.00 294.00,557.00 290.00,543.00 290.00,543.00 290.00,543.00 291.00,531.00 291.00,531.00 291.00,531.00 294.00,536.00 294.00,536.00" style="fill:#FFFF66;stroke:grey;stroke-width:1"></polygon></g><defs><style type="text/css">.svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }</style></defs><g id="svg-pan-zoom-controls" transform="translate(1785 726) scale(0.75)" class="svg-pan-zoom-control"><g id="svg-pan-zoom-zoom-in" transform="translate(30.5 5) scale(0.015)" class="svg-pan-zoom-control"><rect x="0" y="0" width="1500" height="1400" class="svg-pan-zoom-control-background"></rect><path d="M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z" class="svg-pan-zoom-control-element"></path></g><g id="svg-pan-zoom-reset-pan-zoom" transform="translate(5 35) scale(0.4)" class="svg-pan-zoom-control"><rect x="2" y="2" width="182" height="58" class="svg-pan-zoom-control-background"></rect><path d="M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z" class="svg-pan-zoom-control-element"></path><path d="M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z" class="svg-pan-zoom-control-element"></path></g><g id="svg-pan-zoom-zoom-out" transform="translate(30.5 70) scale(0.015)" class="svg-pan-zoom-control"><rect x="0" y="0" width="1500" height="1400" class="svg-pan-zoom-control-background"></rect><path d="M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z" class="svg-pan-zoom-control-element"></path></g></g></svg>';

										$out.= '</li>';

										$out.= '<li style="border: 1px solid #dddddd; border-left: none; border-right: none;">';
										$out.= '</li>';

									$out.= '</ul>';

								$out.= '</div>';
							$out.= '</div>';
						$out.= '</div><!-- /grid-a -->';

						$out.= '<div class="ui-bar">';
							$out.= '<ul data-role="listview" data-divider-theme="b">'; // as long as it is without Area show 50% alpha
								$out.= '<li data-role="list-divider" data-theme="b" style="padding: 15px;">';
									$out.= '<a href="" data-role="button" class="ui-btn ui-shadow ui-corner-all ui-btn-a" style="float: right; background-color: #065c00;color: white;text-shadow: none;border: 1px solid black;">';
										$out.= 'Submit';
									$out.= '</a>';
								$out.= '</li>';
							$out.= '</ul>';
						$out.= '</div>';

					break;

				case 'CapButton':
					// TODO SELECT FOR TEMPLATE HERE
					$out = '</li></ul></div>'; // exit li
					$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';
					$out.= '<div data-role="listview" class="ui-grid-a" style="height: 200px;margin: 0px 0px 0px 0px;">';
						$out.= '<div class="ui-block-a" style="padding-right: 7.5px;">';							
							$out.= '<a href="#alert" style="text-decoration: none;"><div class="ui-btn ui-input-btn ui-btn-b ui-corner-all ui-shadow" style="height: 85px;padding-top: 85px;">';
								$out.=  $langs->trans("NewCap");
							$out.= '</div></a>';
						$out.= '</div>';
						$out.= '<div class="ui-block-b" style="padding-left: 7.5px;">';
							$out.= '<a href="index.php?read=1#alert" data-ajax="false" style="text-decoration: none;"><div class="ui-btn ui-input-btn ui-btn-b ui-corner-all ui-shadow" style="height: 85px;padding-top: 85px;">';
								$out.=  $langs->trans("ReadCap");
							$out.= '</div></a>';
						$out.= '</div>';
					$out.= '</div>';
					$out.= '<ul data-role="listview" style="margin-top: 7.5px;"><li>'; // enter li
						$out.= '<a href="#conf" >'.$langs->trans("TitleConfig").'</a>';
					$out.= '</li><li>';
					break;
					
				case 'identifier':
					
					if(!empty($this->identifier[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
				
					$out = '<div id="Identapend">';
						$out.= '<label>'.$langs->trans("LabelIdentifier").': '.$this->tooltip($type, $langs->trans("LabelIdentifierDesc")).'</label>';
						if(!is_array($this->identifier))
						{
							$status_theme_wm = $status_theme;
							$status_theme_is = $status_theme;
							$status_theme_ti = $status_theme;
							$status_theme_id = $status_theme;
							
							if(!empty($conf->identifier->WMO_OID)) 	$status_theme_wm = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							if(!empty($conf->identifier->ISO)) 			$status_theme_is = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							if(!empty($conf->identifier->ID_ID)) 		$status_theme_ti = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							if($conf->identifier->time->on == true) $status_theme_id = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							
							$out.= '<div class="ui-grid-c">';
								if(!empty($conf->identifier->WMO_OID))	$out.= '<div class="ui-block-a" style="width: 200px;"><input placeholder="WMO OID" '.$status_theme_wm.' type="text" maxlength="22" name="identifier[WMO]"  value="'.$conf->identifier->WMO_OID.'"></div>';
								if(!empty($conf->identifier->ISO))			$out.= '<div class="ui-block-b" style="width: 45px;"><input '.$status_theme_is.' placeholder="ISO" type="text" maxlength="4" name="identifier[ISO]"  value="'.$conf->identifier->ISO.'"></div>';
								if($conf->identifier->time->on == true) $out.= '<div class="ui-block-c" style="width: 160px;"><input '.$status_theme_ti.' placeholder="YYMMDDHHMMSS" type="text" maxlength="14" name="identifier[time]" value="'.date('ymdHis').'"></div>'; // YYMMDDHHMMSS
								if(!empty($conf->identifier->ID_ID))	 	$out.= '<div class="ui-block-d" style="width: 200px;"><input '.$status_theme_id.' placeholder="Warning ID" type="text" maxlength="22" name="identifier[ID]" value="'.$conf->identifier->ID_ID.'"></div>';
								if(empty($conf->identifier->ID_ID)) 		$out.= '<div class="ui-block-d"><input '.$status_theme.' placeholder="Warning ID" type="text" name="identifier[ID]"  value="'.$this->identifier[0].'"></div>';
							$out.= '</div>';
						}
						else
						{
							$out.= '<input '.$status_theme.' placeholder="" type="text" name="identifier[ID]"  value="'.$this->identifier[0].'">';
						}
					$out.= '</div>';					
					break;
					
				case 'sender':
					if(!empty($this->sender[0])) $status_theme = 'data-theme="f"';
					$out = '<legend>'.$langs->trans("Labelsender").': '.$this->tooltip($type, $langs->trans("LabelsenderDesc")).'</legend>';	
					$out.= '<input '.$status_theme.' placeholder="sender" type="text" name="sender" value="'.$this->sender[0].'">';
					break;
					
				case 'sent':
					if(!empty($this->sent[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if($this->sent[0]) $st = $this->make_cap_time($this->sent[0]);
					$out = '<div id="Sentapend">';
						$out.= '<label>'.$langs->trans("LabelSent").': '.$this->tooltip($type, $langs->trans("LabelSentDesc")).'</label>';
						$out.= '<div class="ui-grid-b">';
							$out.= '<div class="ui-block-a" style="width: 155px;">';
								$out.= '<input '.$status_theme.' type="date" name="sent[date]" value="'.$st['date'].'">';
							$out.= '</div>';
							$out.= '<div class="ui-block-b" style="width: 155px;">';
								$out.= '<div class="input-group clockpicker" data-autoclose="true">';
									$out.= '<input '.$status_theme.'  type="time" name="sent[time]" step="1" value="'.$st['time'].'">';
									$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
										$out.= '<span class="glyphicon glyphicon-time"></span>';
									$out.= '</span>';
								$out.= '</div>';
							$out.= '</div>';
							$out.= '<div class="ui-block-c" style="width: 24px;">';
								$out.= '<input type="text" max-size="1" value="+" name="sent[plus]" style="height: 37px;">';
							$out.= '</div>';
							$out.= '<div class="ui-block-c" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="time" name="sent[UTC]" value="'.$st['zone'].'">';
							$out.= '</div>'; // <yyyy>-<MM>-T<HH>:<mm>:<ss>+<hour>:<min>
						$out.= '</div>';
					$out.= '</div>';
					break;
				
				case 'references': 
					if(!empty($this->references[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$out = '<legend>'.$langs->trans("Labelreferences").': '.$this->tooltip($type, $langs->trans("LabelreferencesDesc")).'</legend>';	
					$out.= '<input '.$status_theme.'  placeholder="references" type="text" name="references" value="'.$this->references[0].'">'; // web / identifier / sent 
					break;
				
				case 'status': 
					$status_theme_st = $status_theme;
					$status_theme_ms = $this->GetTypeStatusFromArray($status_arr['msgType']);
					$status_theme_sc = $this->GetTypeStatusFromArray($status_arr['scope']);

					if(!empty($this->status[0])) $status_theme_st = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if(!empty($this->msgType[0])) $status_theme_ms = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['msgType'], 1);
					if(!empty($this->scope[0])) $status_theme_sc = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['scope'], 1);
					// Actual / Test / Exercise / System / Test / Draft
					$status = $this->buildSelect("status", array( "Actual" => "Actual", "Test" => "Test", "Exercise" => "Exercise", "System" => "System", "Test" => "Test", "Draft" => "Draft" ), " ".$status_theme_st." data-native-menu=\"false\"", "Status", $this->status[0]); 

				 	// Alert / Update / Cancel / Ack / Error
					$msgType = $this->buildSelect("msgType", array( "Alert" => "Alert", "Update" => "Update", "Cancel" => "Cancel", "Ack" => "Ack", "Error" => "Error" ), " ".$status_theme_ms." data-native-menu=\"false\" id=\"msgType\"", "MsgType", $this->msgType[0]); 

					// Public / Restricted / Private
					$scope = $this->buildSelect("scope", array( "Public" => "Public", "Restricted" => "Restricted", "Private" => "Private" ), " ".$status_theme_sc." data-native-menu=\"false\"", "Scope", $this->scope[0]);  

						$out = '<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true" id="TypeMessage">';
							$out.= '<legend>'.$langs->trans("LabelSetTheTypesOfTheMessage").': '.$this->tooltip($type, $langs->trans("LabelSetTheTypesOfTheMessageDesc")).'</legend>';							
								$out.= $status;					
								$out.= $msgType;							
								$out.= $scope;
						$out.= '</fieldset>';
				break;
				
				case 'category': 
					$status_theme_ca = $status_theme;
					$status_theme_re = $this->GetTypeStatusFromArray($status_arr['responseType']);
					if(!empty($this->category[0])) $status_theme_ca = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['category'], 1);
					if(!empty($this->responseType[0])) $status_theme_re = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['responseType'], 1);
					// Geo / Met / Safety / Security / Rescue / Fire / Health / Env / Transport / Infra / CBRNE / Other
					$category = $this->buildSelect("category", array( "Geo" => $langs->trans("Geo"), "Met" => $langs->trans("Met"), "Safety" => $langs->trans("Safety"), "Security" => $langs->trans("Security"), "Rescue" => $langs->trans("Rescue"), "Fire" => $langs->trans("Fire"), "Health" => $langs->trans("Health"), "Env" => $langs->trans("Env"), "Transport" => $langs->trans("Transport"), "Infra" => $langs->trans("Infra"), "CBRNE" => $langs->trans("CBRNE"), "Other" => $langs->trans("Other") ), " ".$status_theme_ca." data-native-menu=\"false\"", "Category", $this->category[0]);
					// Shelter / Evacuate / Prepare / Execute / Avoid / Monitor / Assess / AllClear / None
					$responseType = $this->buildSelect("responseType", array( "Shelter" => $langs->trans("Shelter"), "Evacuate" => $langs->trans("Evacuate"), "Prepare" => $langs->trans("Prepare"), "Execute" => $langs->trans("Execute"), "Avoid" => $langs->trans("Avoid"), "Monitor" => $langs->trans("Monitor"), "Assess" => $langs->trans("Assess"), "AllClear" => $langs->trans("AllClear"), "None" => $langs->trans("None") ), " ".$status_theme_re." data-native-menu=\"false\"", "Response Type", ($this->responseType[0][0]));

						$out = '<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true">';
							$out.= '<legend>'.$langs->trans("LabelSetTheHazardType").': '.$this->tooltip($type, $langs->trans("LabelSetTheHazardTypeDesc")).'</legend>';							
								$out.= $category;					
								$out.= $responseType;	
						$out.= '</fieldset>';
				
				break;

				case 'urgency': 
					$status_theme_ur = $status_theme;
					$status_theme_se = $this->GetTypeStatusFromArray($status_arr['severity']);
					$status_theme_ce = $this->GetTypeStatusFromArray($status_arr['certainty']);

					if(!empty($this->urgency[0])) $status_theme_ur = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if(!empty($this->severity[0])) $status_theme_se = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['severity'], 1);
					if(!empty($this->certainty[0])) $status_theme_ce = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['certainty'], 1);
					// Immediate / Expected / Future / Past
					$urgency = $this->buildSelect("urgency", array( "Immediate" => "Immediate", "Expected" => "Expected", "Future" => "Future", "Past" => "Past" ), " ".$status_theme_ur." data-native-menu=\"false\"", "Urgency", $this->urgency[0]);
					
					// Extreme / Severe / Moderate / Minor / Unknown 
					$severity = $this->buildSelect("severity", array( "Minor" => "Minor", "Moderate" => "Moderate", "Severe" => "Severe", "Extreme" => "Extreme", "Unknown" => "Unknown" ), " ".$status_theme_se." data-native-menu=\"false\"", "Severity", $this->severity[0]);

					// Observed / Likely / Possible/ Unlikely / Unknown
					$certainty = $this->buildSelect("certainty", array( "Unlikely" => "Unlikely", "Possible" => "Possible", "Likely" => "Likely", "Observed" => "Observed", "Unknown" => "Unknown" ), " ".$status_theme_ce." data-native-menu=\"false\"", "Certainty", $this->certainty[0]);
				
						$out = '<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true">';
							$out.= '<legend>'.$langs->trans("LabelSetThePriorityOfTheMessage").': '.$this->tooltip($type, $langs->trans("LabelSetThePriorityOfTheMessageDesc")).'</legend>';							
								$out.= $urgency;					
								$out.= $severity;							
								$out.= $certainty;
						$out.= '</fieldset>';
				
				break;		

				case 'audience': 
					if(!empty($this->audience[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$out = '<legend>'.$langs->trans("Labelaudience").': '.$this->tooltip($type, $langs->trans("LabelaudienceDesc")).'</legend>';	
					$out.= '<input '.$status_theme.'  placeholder="audience" type="text" name="audience" value="'.$this->audience[0].'">';
					break;
					
				case 'eventCode': 
					if(!empty($this->eventCode[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$out = '<div id="Eventappend">';
						$out.= '<legend>'.$langs->trans("LabelEventCode").': '.$this->tooltip($type, $langs->trans("LabelEventCodeDesc")).'</legend>';
						$out.= '<div class="ui-grid-b">';
						if(is_array($this->eventCode[0]))
						{
							foreach($this->eventCode[0] as $key => $eventCode)
							{
								$out.= '<div class="ui-grid-b">';
									$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="eventCode[valueName][]" value="'.$eventCode['valueName'].'"></div>';
									$out.= '<div class="ui-block-b"><input '.$status_theme.'  placeholder="Value Value" type="text" name="eventCode[value][]" value="'.$eventCode['value'].'"></div>';
								$out.= '</div>';
							}	
						}
						$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="eventCode[valueName][]"></div>';
						$out.= '<div class="ui-block-b"><input '.$status_theme.'  placeholder="Value" type="text" name="eventCode[value][]"></div>';
						$out.= '<div class="ui-block-c"><input '.$status_theme.'  type="button" onclick="plusEventCodeInput()" value="+"></div>';
						$out.= '</div>';
					$out.= '</div>';
					break;
				
				case 'effective-Clock':
						$out.= '<div class="input-group clockpicker" data-autoclose="true">';
							$out.= '<input type="time" class="form-control" value="09:30" step="2">';
							$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
								$out.= '<span class="glyphicon glyphicon-time"></span>';
							$out.= '</span>';
						$out.= '</div>';
					break;
				
				case 'effective':
					if(!empty($this->effective[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if($this->effective[0]) $st = $this->make_cap_time($this->effective[0]);
					$out = '<div id="Effectiveapend">';
						$out.= '<legend>'.$langs->trans("LabelEffective").': '.$this->tooltip($type, $langs->trans("LabelEffectiveDesc")).'</legend>';
						$out.= '<div class="ui-grid-b">';
							$out.= '<div class="ui-block-a" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="date" name="effective[date]" value="'.$st['date'].'">';
							$out.= '</div>';
							$out.= '<div class="ui-block-b" style="width: 155px;">';
								$out.= '<div class="input-group clockpicker" data-autoclose="true">';
									$out.= '<input '.$status_theme.'  type="time" name="effective[time]" step="1" value="'.$st['time'].'">';
									$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
										$out.= '<span class="glyphicon glyphicon-time"></span>';
									$out.= '</span>';
								$out.= '</div>';
							$out.= '</div>';
							$out.= '<div class="ui-block-c" style="width: 24px;">';
								$out.= '<input type="text" max-size="1" value="+" name="effective[plus]" style="height: 37px;">';
							$out.= '</div>';
							$out.= '<div class="ui-block-d" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="time" name="effective[UTC]" value="'.$st['zone'].'">';
							$out.= '</div>'; // <yyyy>-<MM>-T<HH>:<mm>:<ss>+<hour>:<min>
						$out.= '</div>';
					$out.= '</div>';
					break;

				case 'onset':
					if(!empty($this->onset[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if($this->onset[0]) $st = $this->make_cap_time($this->onset[0]);
					$out = '<div id="Onsetapend">';
						$out.= '<legend>'.$langs->trans("LabelOnset").': '.$this->tooltip($type, $langs->trans("LabelOnsetDesc")).'</legend>';
						$out.= '<div class="ui-grid-b">';
							$out.= '<div class="ui-block-a" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="date" name="onset[date]" value="'.$st['date'].'">';
							$out.= '</div>';
							$out.= '<div class="ui-block-b" style="width: 155px;">';
								$out.= '<div class="input-group clockpicker" data-autoclose="true">';
									$out.= '<input '.$status_theme.'  type="time" name="onset[time]" step="1" value="'.$st['time'].'">';
									$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
										$out.= '<span class="glyphicon glyphicon-time"></span>';
									$out.= '</span>';
								$out.= '</div>';
							$out.= '</div>';
							$out.= '<div class="ui-block-c" style="width: 24px;">';
								$out.= '<input type="text" max-size="1" value="+" name="onset[plus]" style="height: 37px;">';
							$out.= '</div>';
							$out.= '<div class="ui-block-d" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="time" name="onset[UTC]" value="'.$st['zone'].'">';
							$out.= '</div>'; // <yyyy>-<MM>-T<HH>:<mm>:<ss>+<hour>:<min>
						$out.= '</div>';
					$out.= '</div>';
					break;
					
				case 'expires': 		
					if(!empty($this->expires[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);		
					if($this->expires[0]) $st = $this->make_cap_time($this->expires[0]);
					$out = '<div id="Expieresapend">';
						$out.= '<legend>'.$langs->trans("LabelExpires").': '.$this->tooltip($type, $langs->trans("LabelExpiresDesc")).'</legend>';
						$out.= '<div class="ui-grid-b">';
							$out.= '<div class="ui-block-a" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="date" name="expires[date]" value="'.$st['date'].'">';
							$out.= '</div>';
							$out.= '<div class="ui-block-b" style="width: 155px;">';
								$out.= '<div class="input-group clockpicker" data-autoclose="true">';
									$out.= '<input '.$status_theme.'  type="time" name="expires[time]" step="1" value="'.$st['time'].'">';
									$out.= '<span class="input-group-addon" style="font-family: \'Helvetica Neue\', Helvetica, Arial, sans-serif;font-size: 14px;">';
										$out.= '<span class="glyphicon glyphicon-time"></span>';
									$out.= '</span>';
								$out.= '</div>';
							$out.= '</div>';
							$out.= '<div class="ui-block-c" style="width: 24px;">';
								$out.= '<input type="text" max-size="1" value="+" name="expires[plus]" style="height: 37px;">';
							$out.= '</div>';
							$out.= '<div class="ui-block-d" style="width: 155px;">';
								$out.= '<input '.$status_theme.'  type="time" name="expires[UTC]" value="'.$st['zone'].'">';
							$out.= '</div>'; // <yyyy>-<MM>-T<HH>:<mm>:<ss>+<hour>:<min>
						$out.= '</div>';
					$out.= '</div>';
					break;

				case 'senderName': 
					if(!empty($this->senderName[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);			
					$out = '<legend>'.$langs->trans("LabelsenderName").': '.$this->tooltip($type, $langs->trans("LabelsenderNameDesc")).'</legend>';	
					$out.= '<input '.$status_theme.'  placeholder="senderName" type="text" name="senderName" value="'.$this->senderName[0].'">'; 
					break;
					
				case 'info':
					$out = 'TEST';
					break;
					
				case 'lang':
					if(!empty($this->language[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);			
					$langs_arr = $this->getlang();	
						
					foreach($langs_arr as $key_l => $val_l)
					{
						if(in_array($key,$this->language)) unset($langs_arr[$key]);
					}
					
					$lang_S = $this->buildSelect("language_select", $langs_arr, "data-native-menu=\"false\" id=\"language\"", $langs->trans("LabelLanguage"));
					
					$extralang = '<div data-role="controlgroup" data-type="horizontal">';
					
					$styleD[true] = "";
					$styleD[false] = "display:none;";
					//if(is_array($this->language)) die(print_r($this->language)); // Array ( [0] => en-GB [1] => de-DE ) 1
					
					foreach($langs_arr as $key => $langs_val)
					{
						if(in_array($key,$this->language)) $display = true; else $display = false;
						$extralang.= '<a href="#" class="ui-btn Lang_Button" role="button" id="'.$key.'_Button" style="'.$styleD[$display].' border-right: 1px solid #dddddd;">'.$langs_val.' <span id="'.$key.'_Remove_Button" style="color:red; padding-left: 5px;">X</span><input type="hidden" name="language[]" id="'.$key.'_language_input" value=""></a>';
						if($display == true) $extralang.= '<input '.$status_theme.'  type="hidden" value="'.$key.'" name="language[]">';
					}
					$extralang.= '</div>';
					
					$out = $lang_S;			
					$out.= $extralang;		
					break;
					
				case 'event': 
					$status_theme_ev = $status_theme;
					$status_theme_he = $this->GetTypeStatusFromArray($status_arr['headline']);
					$status_theme_de = $this->GetTypeStatusFromArray($status_arr['description']);
					$status_theme_in = $this->GetTypeStatusFromArray($status_arr['instruction']);

					if(!empty($this->event[0])) $status_theme_ev = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					if(!empty($this->headline[0])) $status_theme_he = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['headline'], 1);
					if(!empty($this->description[0])) $status_theme_de = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['description'], 1);
					if(!empty($this->instruction[0])) $status_theme_in = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr['instruction'], 1);
					$langs_arr = $this->getlang();	
					$extralang = "";
					$styleD[true] = "";
					$styleD[false] = "display:none;";
					$i = 0;
					
					foreach($langs_arr as $key => $langs_val)
					{
						
						if(in_array($key,$this->language) && $i < 1) $display = true; else $display = false;
						
						$extralang.= '<div class="lang_input" id="'.$key.'" style="'.$styleD[$display].'">';
						
								$extralang.= '<input '.$status_theme_ev.'  placeholder="event" type="text" name="event['.$key.']" value="'.$this->event[$i].'">';

								$extralang.= '<input '.$status_theme_he.'  placeholder="headline" type="text" name="headline['.$key.']" value="'.$this->headline[$i].'">';

								$extralang.= '<textarea '.$status_theme_de.'  placeholder="description" name="description['.$key.']">'.$this->description[$i].'</textarea>';

								$extralang.= '<input '.$status_theme_in.'  placeholder="instruction" type="text" name="instruction['.$key.']" value="'.$this->instruction[$i].'">';

						$extralang.= '</div>';
						
						$i++;
					}
					
					$out = $extralang;
					break;
					
				case 'web': 
					if(!empty($this->web[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$out = '<legend>'.$langs->trans("Labelweb").': '.$this->tooltip($type, $langs->trans("LabelwebDesc")).'</legend>';	
					$out.= '<input '.$status_theme.'  placeholder="web" type="text" name="web" value="'.$this->web[0].'">'; 
					break;
					
				case 'contact': 
					if(!empty($this->contact[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$out = '<legend>'.$langs->trans("Labelcontact").': '.$this->tooltip($type, $langs->trans("LabelcontactDesc")).'</legend>';	
					$out.= '<input '.$status_theme.'  placeholder="contact" type="text" name="contact" value="'.$this->contact[0].'">'; 
					break;

				case 'parameter': 
					if(!empty($this->parameter[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
					$l_level = array( "Unknown", "Minor", "Moderate", "Severe", "Extreme"  );
					
					if(is_array($ParameterArray['AWT']))
					foreach($ParameterArray['AWT'] as $key => $area_arr)
					{
						$S_Param_AWT[$area_arr['id'].'&#59; '.$area_arr['hazard_type']] = $area_arr['hazard_type_DESC'];
						$G_Param_AWT[$area_arr['id'].'&#59; '.$area_arr['hazard_type']] = 'awareness_type'; //awareness_type awareness_level
					}
					
					if(is_array($ParameterArray['AWL']))
					foreach($ParameterArray['AWL'] as $key => $area_arr)
					{
						$S_Param_AWL[$area_arr['id'].'&#59; '.$area_arr['hazard_level'].'&#59; '.$l_level[$area_arr['id']]] = $area_arr['hazard_level'];
						$G_Param_AWL[$area_arr['id'].'&#59; '.$area_arr['hazard_level'].'&#59; '.$l_level[$area_arr['id']]] = 'awareness_level'; //awareness_type awareness_level
						$this->level_color[$area_arr['hazard_level']] = $area_arr['hazard_level_color'];
					}
					//die(print_r($S_Param_AWL));
					if(is_array($S_Param_AWT) && is_array($S_Param_AWT))
					{
						$out.= '<legend>'.$langs->trans("LabelAwarenessTypeWebservice").': '.$this->tooltip($type, $langs->trans("LabelAwarenessTypeWebserviceDesc")).'</legend>';							
						$out.= $this->buildSelectValueName('parameter[value][]', 'parameter[valueName][]', 'parameter_awt',$S_Param_AWT, $G_Param_AWT, $this->parameter[0]);

						$out.= '<legend>'.$langs->trans("LabelAwarenessLevelWebservice").': '.$this->tooltip($type, $langs->trans("LabelAwarenessLevelWebserviceDesc")).'</legend>';							
						$out.= $this->buildSelectValueName('parameter[value][]', 'parameter[valueName][]', 'parameter_awl',$S_Param_AWL, $G_Param_AWL, $this->parameter[0]);
					}
					else
					{
						$out = '<div id="Parameterappend">';
							$out.= '<legend>'.$langs->trans("LabelParameter").': '.$this->tooltip($type, $langs->trans("LabelParameterDesc")).'</legend>';	
							$out.= '<div class="ui-grid-b">';
								foreach($this->parameter[0] as $key => $parameter)
								{
									$out.= '<div class="ui-grid-b">';
										$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="parameter[valueName][]" value="'.$parameter['valueName'].'"></div>';
										$out.= '<div class="ui-block-b"><input '.$status_theme.'  placeholder="Value Value" type="text" name="parameter[value][]" value="'.$parameter['value'].'"></div>';
									$out.= '</div>';
								}	
								$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="parameter[valueName][]"></div>';
								$out.= '<div class="ui-block-b"><input '.$status_theme.'  placeholder="Value" type="text" name="parameter[value][]"></div>';
								$out.= '<div class="ui-block-c"><input '.$status_theme.'  type="button" onclick="plusParameterInput()" value="+"></div>';
							$out.= '</div>';
						$out.= '</div>';
					}
					break;
					
				/*
				 * Area
				 */					
					case 'areaDesc': 
						if(!empty($this->areaDesc[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						$out = '<legend>'.$langs->trans("LabelareaDesc").': '.$this->tooltip($type.'tool', $langs->trans("LabelareaDescDesc")).'</legend>';
						$out.= '<input '.$status_theme.'  placeholder="areaDesc" type="text" name="areaDesc" id="areaDesc" value="'.$this->areaDesc[0].'">';
						break;
	
					case 'polygon': 
						if(!empty($this->polygon[0][0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						$out = '<legend>'.$langs->trans("Labelpolygon").': '.$this->tooltip($type.'tool', $langs->trans("LabelpolygonDesc")).'</legend>';	
						$out.= '<input '.$status_theme.'  placeholder="polygon" type="text" name="polygon" id="polygon" value="'.$this->polygon[0][0].'">';
						break;
	
					case 'circle': 
						if(!empty($this->circle[0][0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						$out = '<legend>'.$langs->trans("Labelcircle").': '.$this->tooltip($type.'tool', $langs->trans("LabelcircleDesc")).'</legend>';	
						$out.= '<input '.$status_theme.'  placeholder="circle" type="text" name="circle" id="circle" value="'.$this->circle[0][0].'">';
						break;
						
					case 'map':
							$out = '<div id="map" style="height: 480px;" class="map"></div>';
							$out.= '<div id="mapinfo" class="mapinfo">';								
								$out.='<ul data-role="listview">';
									$out.='<li>';
										$out.='<label for="dragCircle">'.$langs->trans("Labelpolygon").':</label><select name="drawPolygon" id="drawPolygon" data-role="slider" data-theme="b" data-mini="true"><option value="0">Off</option><option value="1">On</option></select>';
									$out.='</li>';
									$out.='<li>';
										$out.='<label for="dragCircle">'.$langs->trans("Labelcircle").':</label><select name="dragCircle" id="dragCircle" data-role="slider" data-theme="b" data-mini="true"><option value="0">Off</option><option value="1">On</option></select>';
									$out.='</li>';
								$out.='</ul>';
							$out.= '</div>';
						break;
						
					case 'geocode':
						if(!empty($this->geocode[0])) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						// $out.= $AreaCodesArray;
						foreach($AreaCodesArray as $key => $area_arr)
						{
							if(!empty($area_arr['geotype']))
							{
								$S_Area[$area_arr['geocode']] = $area_arr['AreaCaption'];
								$G_Area[$area_arr['geocode']] = $area_arr['geotype'];
							}
							else 
							{
								$S_Area[$area_arr['EMMA_ID']] = $area_arr['AreaCaption'];
								$G_Area[$area_arr['EMMA_ID']] = "EMMA_ID";
							}
						}
						
						if(is_array($S_Area))
						{
							$out = '<legend>'.$langs->trans("LabelGeocodeWebservice").': '.$this->tooltip($type, $langs->trans("LabelGeocodeWebserviceDesc")).'</legend>';							
							$out.= $this->buildSelectValueName('geocode[value][]', 'geocode[valueName][]', 'geocode',$S_Area, $G_Area, $this->geocode[0]);
						}
						else
						{
							$out = '<div id="Geocodeappend">';
								$out.= '<legend>'.$langs->trans("LabelGeocode").': '.$this->tooltip($type, $langs->trans("LabelGeocodeDesc")).'</legend>';	
								foreach($this->geocode[0] as $key => $geocode)
								{
									$out.= '<div class="ui-grid-b">';
										$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="geocode[valueName][]" value="'.$geocode['valueName'].'"></div>';
										$out.= '<div class="ui-block-b"><input '.$status_theme.'  placeholder="geocode Value" type="text" name="geocode[value][]" value="'.$geocode['value'].'"></div>';
									$out.= '</div>';
								}	
								$out.= '<div class="ui-grid-b">';
									$out.= '<div class="ui-block-a"><input '.$status_theme.'  placeholder="Valuename" type="text" name="geocode[valueName][]"></div>';
									$out.= '<div class="ui-block-b"><input '.$status_theme.' placeholder="Value" type="text" name="geocode[value][]"></div>';
									$out.= '<div class="ui-block-c"><input '.$status_theme.' type="button" onclick="plusGeocodeInput()" value="+"></div>';
								$out.= '</div>';							
							$out.= '</div>';
						}
						break;															

					/*
					 * Conf input => [conf]
					 */					 
					 
					case 'cap_save':
						if(!empty($conf->cap->save)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						if($conf->cap->save == 1) $onoroff = 'checked=""';
						else $onoroff = '';
						$out = '<label for="identifier_time">'.$langs->trans("LabelSaveCapsInOutputFolder").':</label>';
						$out.= '<input '.$status_theme.' type="checkbox" data-role="flipswitch" name="conf[cap][save]" id="cap_save" '.$onoroff.' data-theme="b">';
						break;
					
					case 'cap_output':
							if(!empty($conf->cap->output)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							$out = '<legend>'.$langs->trans("Labelcap_output").': '.$this->tooltip($type.'tool', $langs->trans("Labelcap_outputDesc")).'</legend>';
							$out.= '<input '.$status_theme.' type="text" placeholder="Cap Output" name="conf[cap][output]" value="'.$conf->cap->output.'">';
						break;						

					case 'ID_ID':
							if(!empty($conf->identifier->ID_ID)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							$out = $langs->trans("LabelIdentifierNumber").': <input '.$status_theme.' type="number" placeholder="Identifier Number" name="conf[identifier][ID_ID]" value="'.$conf->identifier->ID_ID.'">';
						break;
						
					case 'WMO_OID':
							if(!empty($conf->identifier->WMO_OID)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							$out = '<legend>'.$langs->trans("LabelWMO_OID").': '.$this->tooltip($type.'tool', $langs->trans("LabelWMO_OIDDesc")).'</legend>';
							$out.= '<input '.$status_theme.'  type="text" placeholder="WMO OID" name="conf[identifier][WMO_OID]" value="'.$conf->identifier->WMO_OID.'">';
						break;
						
					case 'ISO':
						if(!empty($conf->identifier->ISO)) $status_theme = 'data-theme="f"';
						$out = $langs->trans("LabelISO").': <input '.$status_theme.' type="text" maxsize="2" placeholder="ISO" name="conf[identifier][ISO]" value="'.$conf->identifier->ISO.'">'; 
					 break;
					 
					case 'identifier_time':
						if(!empty($conf->identifier->time->on)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						if($conf->identifier->time->on == 1) $onoroff = 'checked=""';
						else $onoroff = '';
						$out = '<legend>'.$langs->trans("LabelAutomaticIdentifierTime").': '.$this->tooltip($type.'tool', $langs->trans("LabelAutomaticIdentifierTimeDesc")).'</legend>';
						//$out = '<label for="identifier_time">'.$langs->trans("LabelAutomaticIdentifierTime").':</label>';
						$out.= '<input '.$status_theme.' type="checkbox" data-role="flipswitch" name="conf[identifier][time][on]" id="identifier_time" '.$onoroff.' data-theme="b">';
						break;	
						
					case 'template':
						if(file_exists('conf/template.cap')) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						foreach(scandir($conf->cap->output) as $num => $capfilename)
						{
							if($capfilename != '.' && $capfilename != '..' && $capfilename != '.cap' && $capfilename != '.conv.cap')
							{
								$files[$capfilename] = $capfilename;
							}
						}
						
						$out = '<label for="Template">'.$langs->trans("Template").':</label>';
						if(file_exists('conf/template.cap')) $onoroff = 'checked=""'; else $onoroff = '';
							$out.= '<input '.$status_theme.' type="checkbox" data-role="flipswitch" name="template_on" id="template_on" '.$onoroff.' data-theme="b">';
							
							if(file_exists('conf/template.cap'))
							{
								require_once 'lib/cap.read.class.php';
								$alert = new alert('conf/template.cap');
								$template = $alert->output();
								
								$files[$template['identifier']] = $template['identifier']; 
							}
		
							$out.=  $this->buildSelect("Template", $files, "data-native-menu=\"false\"", "Template", $template['identifier'] );
					
						break;
						
					case 'lang_conf':
						if(!empty($conf->select->lang)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
						$out = '<label for="lang_conf">'.$langs->trans("LabelUsableLanguages").':</label>';
						$out.= '<select name="conf[select][lang][]" id="lang_conf" data-native-menu="false" multiple="multiple" data-iconpos="left">';
						foreach($conf->lang as $key => $lang_name)
						{
							if($conf->select->lang[$key] == false)
							{
								$out.= '<option value="'.$key.'">'.$lang_name.'</option>';
							}
							else 
							{
								$out.= '<option value="'.$key.'" selected="selected">'.$lang_name.'</option>';
							}
						}

						$out.= '</select>';
						break;
						
					case 'lang_conf_use':
							if(!empty($conf->user->lang)) $status_theme = 'data-theme="f" '.$this->GetTypeStatusFromArray($status_arr[$type], 1);
							$out = '<label for="lang_conf_use">'.$langs->trans("Labellang_conf_use").':</label>';
							$out.= '<select name="conf[user][lang]" id="lang_conf_use" data-native-menu="false" data-iconpos="left">';
							foreach($conf->trans as $key => $lang_name)
							{
								if($conf->user->lang != $key)
								{
									$out.= '<option value="'.$key.'">'.$lang_name.'</option>';
								}
								else 
								{
									$out.= '<option value="'.$key.'" selected="selected">'.$lang_name.'</option>';
								}
							}
	
							$out.= '</select>';
						break;
						
					case 'lang_conf_plus':
							$out = '<div id="LangAappend">';
								//$out.='<label for="sent[date]">'.$langs->trans("LabelAddLanguage").': </label>';
								$out.= '<legend>'.$langs->trans("Labellang_conf_plus").': '.$this->tooltip($type.'tool', $langs->trans("Labellang_conf_plusDesc")).'</legend>';
								$out.= '<div class="ui-grid-b">';
									$out.= '<div class="ui-block-a"><input '.$status_theme.' type="text" maxsize="5" placeholder="RFC 3066" name="conf[lang][key]" id="lang_conf_plus_key"></div>';
									$out.= '<div class="ui-block-b"><input '.$status_theme.' type="text" name="conf[lang][name]" placeholder="Name" id="lang_conf_plus_name"></div>';
									$out.= '<div class="ui-block-c" style="width: 54px;"><input '.$status_theme.' type="button" onclick="plusLangInput()" value="+" data-theme="b"></div>';
									$out.= '</div>';
							$out.= '</div>';
						break;
						
					case 'lang_conf_remove':
							$out = '<div id="LangRappend">';
								//$out.='<label for="sent[date]">'.$langs->trans("LabelRemoveLanguage").': </label>';
								$out.= '<legend>'.$langs->trans("Labellang_conf_remove").': '.$this->tooltip($type.'tool', $langs->trans("Labellang_conf_removeDesc")).'</legend>';
								$out.= '<div class="ui-grid-a">';
									$out.= '<div class="ui-block-a">';
										$out.= '<select id="lang_remove" data-native-menu="false" data-iconpos="left">';
										foreach($conf->lang as $key => $lang_name)
										{
											$out.= '<option value="'.$key.'">'.$lang_name.'</option>';
										}		
										$out.= '</select>';
									$out.= '</div>';
									$out.= '<div class="ui-block-b" style="width: 54px;">';
										$out.= '<input '.$status_theme.' type="button" onclick="minusLangInput()" value="-" id="lang_remove_input_button" data-theme="b">';
										$out.= '<input '.$status_theme.' type="hidden" id="lang_remove_input" value="remove">';
									$out.= '</div>';
								$out.= '</div>';
							$out.= '</div>';
						break;
						
					case 'webservice_on':
							if($conf->webservice->on == 1) $onoroff = 'checked=""';
							else $onoroff = '';
							$out = '<label for="webservice_switch">'.$langs->trans("Webservice").':</label>';
							$out.= '<input '.$status_theme.' type="checkbox" data-role="flipswitch" name="conf[webservice][on]" id="webservice_switch" '.$onoroff.' data-theme="b">';
						break;
								
					case 'webservice_password':
							$out = $langs->trans("Labelwebservice_password").':<input '.$status_theme.' type="text" name="conf[webservice][password]" value="'.$conf->webservice->password.'">';
						break;
						
					case 'webservice_securitykey':
							$out = $langs->trans("Labelwebservice_securitykey").':<input '.$status_theme.' type="text" name="conf[webservice][securitykey]" value="'.$conf->webservice->securitykey.'">';
						break;
						
					case 'webservice_sourceapplication':
							$out = $langs->trans("Labelwebservice_sourceapplication").':<input '.$status_theme.' type="text" name="conf[webservice][sourceapplication]" value="'.$conf->webservice->sourceapplication.'">';
						break;
						
					case 'webservice_login':
							$out = $langs->trans("Labelwebservice_login").':<input '.$status_theme.' type="text" name="conf[webservice][login]" value="'.$conf->webservice->login.'">';
						break;
						
					case 'webservice_entity':
							$out = $langs->trans("Labelwebservice_entity").':<input '.$status_theme.' type="text" name="conf[webservice][entity]" value="'.$conf->webservice->entity.'">';
						break;
						
					//case 'webservice_destination':
					//		$out.= '<legend>'.$langs->trans("Labelwebservice_destination").': '.$this->tooltip($type.'tool', $langs->trans("Labelwebservice_destinationDesc")).'</legend>';
					//		$out.= '<input type="text" name="conf[webservice][destination]" value="'.$conf->webservice->destination.'">';
					//	break;
						
					case 'webservice_WS_METHOD':
							$out = $langs->trans("webservice_WS_METHOD").':<input '.$status_theme.' type="text" name="conf[webservice][WS_METHOD]" value="'.$conf->webservice->WS_METHOD.'">';
						break;
						
					case 'webservice_ns':
							$out = '<legend>'.$langs->trans("Labelwebservice_ns").': '.$this->tooltip($type.'tool', $langs->trans("Labelwebservice_nsDesc")).'</legend>';
							$out.= '<input '.$status_theme.' type="text" name="conf[webservice][ns]" value="'.$conf->webservice->ns.'">';
						break;
						
					case 'webservice_WS_DOL_URL':
							$out = '<legend>'.$langs->trans("Labelwebservice_WS_DOL_URL").': '.$this->tooltip($type.'tool', $langs->trans("Labelwebservice_WS_DOL_URLDesc")).'</legend>';
							$out.= '<input '.$status_theme.' type="text" name="conf[webservice][WS_DOL_URL]" value="'.$conf->webservice->WS_DOL_URL.'">';
						break;
						
					case 'capview':
							$out = '<textarea id="capviewtextarea"></textarea>';
						break;
						
					case 'caplist':
						$out = '</form><form method="POST" id="capform2" name="capform2" action="index.php?read=1" enctype="multipart/form-data" data-ajax="false">';
						$out.= '<input type="file" name="uploadfile" id="uploadfile"><input type="submit" value="'.$langs->trans('LabelUpload').'" name="upload" data-ajax="false">';

						$out.= '<fieldset data-role="controlgroup">';						
								foreach(scandir($conf->cap->output) as $num => $capfilename)
								{
									if($num > 1)
									{
										$out.= '<div class="ui-grid-a">';
											$out.= '<div class="ui-block-a" style="width:90%">';
												$out.= '<input type="radio" name="location" id="cap_file_'.$num.'" value="'.urlencode($capfilename).'">';
												$out.= '<label for="cap_file_'.$num.'">'.$capfilename.' <span style="font-size: 12px;color: #5A5A5A;">('.filesize($conf->cap->output.'/'.$capfilename).'b | '.date('d.m.Y H:i:s',filectime($conf->cap->output.'/'.$capfilename)).')</span> </label>';
											$out.= '</div>';
											$out.= '<div class="ui-block-b" style="width:10%">';
												$out.= '<a href="#cap_file_'.$num.'_delete" data-rel="popup" data-position-to="window" data-transition="pop" class="ui-shadow ui-btn ui-corner-all ui-btn-inline ui-mini"><span style="color:#ff0000">X</span></a>';
											$out.= '</div>';
										$out.= '</div>';
										
										$out.= '<div data-role="popup" id="cap_file_'.$num.'_delete" data-theme="a" data-overlay-theme="b" class="ui-content" style="max-width:340px; padding-bottom:2em;">';
											$out.= '<h3>Delete File?</h3>';
											$out.= '<a href="index.php?delete='.urlencode($capfilename).'" data-ajax="false" class="ui-shadow ui-btn ui-corner-all ui-btn-b ui-icon-check ui-btn-icon-left ui-btn-inline ui-mini">Delete</a>';
											$out.= '<a href="#" data-rel="back" class="ui-shadow ui-btn ui-corner-all ui-btn-inline ui-mini">Cancel</a>';
										$out.= '</div>';
									}
								}
						$out.= '</fieldset>';

						$out.= '<input type="submit" value="<h1>'.$langs->trans("Read").'</h1>" data-ajax="false">';
						$out.= '</form><form method="POST" id="capform" name="capform" action="index.php" enctype="multipart/form-data" data-ajax="false">';
						break;
					
					case 'login_popup':
						if($conf->webservice->on == 1)
						{
							$this->login_id++;
							
							if($conf->webservice_aktive == 1) // Logout
							{
								$out.= '<ul data-role="listview" data-divider-theme="b">';
									$out.= '<li>'.$langs->trans("Service").': '.$_SESSION['ServiceHost'].'</li>';
									$out.= '<li>'.$langs->trans("User").': '.$conf->webservice->login.'</li>';
									$out.= '<li>'.$langs->trans("LoginDate").': '.date('d.m.Y H:i:s', $_SESSION['timestamp']).'</li>';
									$out.= '<li><input '.$status_theme.' type="submit" name="send-logout['.$this->login_id.']" value="'.$langs->trans('Logout').'" data-theme="b"></li>';
								$out.= '</ul>';
							}
							else // Login
							{
								$out = '<h3>'.$langs->trans("LoginToYourWebservice").'</h3>';
														
								$out.= '<label for="un" class="ui-hidden-accessible">'.$langs->trans("Labelwebservice_login").':</label>';
									$out.= '<input '.$status_theme.' type="text" name="Session_login_name['.$this->login_id.']" value="'.$conf->webservice->login.'">';
		
								$out.= '<label for="pw" class="ui-hidden-accessible">'.$langs->trans("Labelwebservice_password").':</label>';
									$out.= '<input '.$status_theme.' type="password" name="Session_login_pass['.$this->login_id.']" value="'.$conf->webservice->password.'">';
		
								$out.= '<label><input '.$status_theme.' type="checkbox" name="savepass[]">'.$langs->trans("SaveWebservicePass").'</label>';
								$out.= '<input id="submit_login_button" '.$status_theme.' type="submit" name="send-login['.$this->login_id.']" value="'.$langs->trans('Login').'" data-theme="b">';	
							}
							
							if(empty($conf->webservice_aktive) && $conf->webservice->on == 1 && $this->login_id == 1)
							{
								$out.= 			'
													<script>
														$("#Login-alert").on("keyup",function(event){
															if ( event.which == 13 ) 
															{
																$( "#submit_login_button" ).trigger( "click" );
															}
														});
														
														$(document).on("pageshow", "#alert" ,function ()
														{
						                  $( "#Login-alert" ).popup();
															setTimeout( function(){ $( "#Login-alert" ).popup("open"); }, 100 );
														});
													</script>
														';
							}
						}
						break;
					/*
					 * Default
					 */
					default:
							
							$out = '<div>';
								$out.= '<label for="'.$type.'">'.$langs->trans("Label".$type).': '.$this->tooltip($type, $langs->trans("Info".$type)).'</label>';
								$out.= '<input '.$status_theme.' type="text" placeholder="'.$type.'" name="'.$type.'">';
							$out.= '</div>';
						break;
			}
			//$out.= $this->InputStandard('sent');
			return $out;
		}
		
		/**
		 * Output HTML Info field
		 *
		 * @param string $name 						The name in the info field
		 * @param string $info 						The info in the info field
		 * @return string 								HTML select field
		 */
		 
		 function tooltip($name, $info, $alttext='ToolboxInfo')
		 {
		 		$out = '<a href="#'.$name.'" data-rel="popup" data-transition="pop" class="my-tooltip-btn ui-btn ui-alt-icon ui-nodisc-icon ui-btn-inline ui-icon-info ui-btn-icon-notext" title="'.$alttext.'">'.$name.'</a>';
		 		$out.= '<div data-role="popup" id="'.$name.'" class="ui-content" data-theme="a" style="max-width:100%;">';
				$out.= $info;
				$out.= '</div>';
			
			return $out;
		 }
		
		var $script = "";
		/**
     * Output Html select
     *
     * @param   string	$name					The POST/GET name of the select
     * @param   array		$data					the content of the select array("option value" => "option Name")
     * @param   string  $option
     * @param   string  $placeholder 
     * @param 	int 		$empty 				if 1 then make a empty value 
     * @return	string								HTML select field
     */
		function buildSelectValueName($name, $name2, $name3, $S_Area, $G_Area, $select = array(), $extclass = "")
		{
			$style_color = "";
			if($name3 == "geocode") $multi = 'multiple="multiple"';
			$out = '<select name="'.$name.'" id="'.$name3.'-select" data-native-menu="false" '.$multi.' class="'.$extclass.'">';
				if(!$extclass) $out.='<option></option>';
				foreach($S_Area as $data_val => $data_name)
				{
					$sel = false;

					foreach($select as $key => $select_code) 
					{
						$select_code['value'] = str_replace(';', '&#59;', $select_code['value']);
						
						if( $data_val == $select_code['value'] )
						{
							$sel = true;
							$sel_tmp = "selected";
							if($name3 == "parameter_awt" || $name3 == "parameter_awl") $check = 'checked="checked"';
						}
					}
					
					if($name3 == "geocode")
					{
						if($sel == true)
						{
							$out.= '<option '.$style_color.' value="'.$data_val.'<|>'.$G_Area[$data_val].'" selected>';
						}
						else
						{
							$out.= '<option '.$style_color.' value="'.$data_val.'<|>'.$G_Area[$data_val].'">';
						}
					}
					else
					{
						if($sel == true)
						{
							$out.= '<option '.$style_color.' value="'.$data_val.'" selected>';
						}
						else
						{
							$out.= '<option '.$style_color.' value="'.$data_val.'">';
						}
					}

					$out.= $data_name;
					$out.= '</option>';
				}							
			$out.= '</select>';

			if($name3 == "parameter_awt" || $name3 == "parameter_awl")
			{
				$out.= '<input type="checkbox" class="'.$name3.'" name="'.$name2.'" value="'.$G_Area[$data_val].'" id="'.$data_name.'" style="display: none;" '.$sel_tmp.' '.$check.'>';
				
				$this->script.= 	'
									$( "#'.$name3.'-select" ).change(function() {
										var res = $( "#'.$name3.'-select" ).val();
										if(res)
										{
											$(".'.$name3.'").prop("checked", true);
										}
										else
										{
											$(".'.$name3.'").prop("checked", false);
										}
									});											
								';
			}
			
			
			return $out;
		}
		
		/**
     * Output Html select
     *
     * @param   string	$name					The POST/GET name of the select
     * @param   array		$data					the content of the select array("option value" => "option Name")
     * @param   string  $option
     * @param   string  $placeholder 
     * @param 	int 		$empty 				if 1 then make a empty value 
     * @return	string								HTML select field
     */
		function buildSelect($name= "", $data = array(), $option = "", $placeholder = "", $selected="", $empty=0)
		{
			$out = '<select name="'.$name.'" '.$option.'>';
			
				if($empty == 1)
				{
					$out.='<option></option>';
				}
				
				if($placeholder)
				{
					$out.= '<option value="#" data-placeholder="true">'.$placeholder.'</option>';
				}
			
				foreach($data as $data_val => $data_name)
				{
					if($selected == $data_val)
					{
						$out.= '<option value="'.$data_val.'" selected>';
					}
					else
					{
						$out.= '<option value="'.$data_val.'">';
					}
					$out.= $data_name;
					$out.= '</option>';
				}
			
			$out.= '</select>';
			return $out;
		}
		
		function make_cap_time($time)
		{
			$time_arr = explode("T", $time);
			$ctime['date'] = $time_arr[0];
			$time_arr_time = explode("+", $time_arr[1]);
			$ctime['time'] = $time_arr_time[0];
			$ctime['zone'] = $time_arr_time[1];
			
			return $ctime;
		}
	
		/**
     * encrypt and decrypt function for passwords
     *     
     * @return	string
     */
		function encrypt_decrypt($action, $string, $key) 
		{
			global $conf;
			
			$output = false;
		
			$encrypt_method = "AES-256-CBC";
			$secret_key = ($key?$key:'NjZvdDZtQ3ZSdVVUMXFMdnBnWGt2Zz09');
			$secret_iv = ($conf->webservice->securitykey ? $conf->webservice->securitykey : 'WebTagServices#hash');
		
			// hash
			$key = hash('sha256', $secret_key);
			
			// iv - encrypt method AES-256-CBC expects 16 bytes - else you will get a warning
			$iv = substr(hash('sha256', $secret_iv), 0, 16);
		
			if( $action == 1 ) {
				$output = openssl_encrypt($string, $encrypt_method, $key, 0, $iv);
				$output = base64_encode($output);
			}
			else if( $action == 2 ){
				$output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
			}
		
			return $output;
		}
		
		/**
     * Output RFC 3066 Array
     *     
     * @return	string						Array with RFC 3066 Array
     */
		function getlang($config = false){
			global $conf;
			
			if(is_array($this->language))
			{
				foreach($this->language as $key => $lang_name)
				{
					$out[$lang_name] = $lang_name;
				}
			}

			$out_tmp = $conf->lang;

			foreach($out_tmp as $key => $lang_name)
			{
				if($conf->select->lang[$key] == true) $out[$key] = $out_tmp[$key];
			}
			
			return $out;
		}

	  /**
     * Output Html Head
     *
     * @return	string						HTML Head
     */
		function Header_llx()
		{			
			global $conf;
			
			$out = '<head>';
				$out.= '<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">';
				$out.= '<script type="text/javascript" src="includes/jquery/jquery.min.js"></script>';
				$out.= '<script type="text/javascript" src="includes/jquery/jquery-ui.min.js"></script>';
				$out.= '<script type="text/javascript" src="includes/d3/d3.v3.min.js"></script>';
				$out.= '<script type="text/javascript" src="js/svg-pan-zoom.js"></script>';

				$out.= '<link rel="stylesheet" type="text/css" href="css/cap_form.css">';
				
				$out.= '<link rel="icon" type="image/png" href="conf/logo.jpg">';
				
				$out.= '<script type="text/javascript" src="js/form.js"></script>';
				$out.= '<script type="text/javascript" src="js/map.js"></script>';
			
				$out.= '<link rel="stylesheet" href="includes/jquery.mobile/jquery.mobile-1.4.5.min.css" />';
				$out.= '<script src="includes/jquery.mobile/jquery.mobile-1.4.5.min.js"></script>';
			
				if( $conf->webservice_aktive == 1 )
				{
					$out.= '<link rel="stylesheet" href="css/MeteoalarmMobile.css" />';
 					
 				}
 				else
 				{
 					$out.= '<link rel="stylesheet" href="css/BackboneMobile.css" />';
 				}
 				
 				$out.= '<link rel="stylesheet" href="css/jquery.mobile.icons.min.css" />';
 				// OpenStreetMap
				$out.= '<script src="includes/jquery/jquery.geo.min.js"></script>';
				
				// Clockpicker Addon
				$out.= '<link rel="stylesheet" type="text/css" href="includes/plugin/jquery-clockpicker.min.css">';
				$out.= '<script type="text/javascript" src="includes/plugin/jquery-clockpicker.min.js"></script>';
				
				$out.= '<title>Cap Creator</title>';

			$out.= '</head>';
			
			return $out;
		}
		
				
		/**
     * Output Html Form
     *
     * @return	string						HTML Form
     */
		function Form()
		{
			global $conf, $langs;
			
			
			if(file_exists('menu/standard_menu.lib.php') && empty($conf->optional_menu))
			{
				include 'menu/standard_menu.lib.php';
			}
			elseif(!empty($conf->optional_menu))
			{
				include addslashes($conf->optional_menu);
			}
			else
			{
				die('Can\'t load standard_menu.lib.php please download menu/standard_menu.lib.php from https://github.com/AT-backbone/Cap-PHP-library');
			}
			
			$Type_arr = Types(); // TYPES FOR PAGES
			$Pages_arr = Pages(); // PAGES
			$Type_Status_arr = TypeStatus(); // Type Status (Like Required)
			
			$out = $this->Header_llx();
			
			$out.= '<body>';			
			$out.= '<form method="POST" id="capform" name="capform" action="index.php" enctype="multipart/form-data" data-ajax="false">';
				$out.= '<input type="hidden" name="action" value="create">';
					
					foreach($Type_arr as $pagename => $TypePage)
					{
						if(!in_array($pagename, $Pages_arr['popup']))
						{
							$out.= '<div data-role="page" id="'.$pagename.'">';

								$out.= '<div data-role="panel" data-display="push" id="'.$pagename.'_panel">';
	    						$out.= '<!-- panel content goes here -->';
	    						$out.= '<ul data-role="listview">';
	    							
	    							$out.= '<li style="height: 91px;">';
	    								$out.= '<img src="conf/logo.jpg" style="border: 1px solid black;border-radius: 45px;width: 20%;margin: 10px 0px 0px 10px;">';
	    								$out.= '<h1>';
	    									$out.= 'Cap Creator';
	    								$out.= '</h1>';
	    								$out.= '<br>';
	    								$out.= '<span style="font-size: 10px;">';
	    									$out.= 'Cap v'.$this->version;
	    								$out.= '</span>';
	    							$out.= '</li>';    							
	    							
										foreach($Pages_arr as $link => $Page_Name)
										{
											if($link != 'popup' && $link != 'next' && $link != 'notitle' && $link != 'header')
											{
												if(!in_array($link, $Pages_arr['popup'])) // a dialog shoud not be in the panel !
												{
													$data = "";
													if(in_array($link, $Pages_arr['noajax'])) $data = 'data-ajax="false"';
													if($link != 'noajax')
													{
														if($link == '#'.$pagename) 	$out.= '<li data-theme="b"><a href="'.$link.'" '.$data.'>'.$Page_Name.'</a></li>';
														else 										$out.= '<li><a href="'.$link.'" '.$data.'>'.$Page_Name.'</a></li>';
													}
													unset($data);
												}
											}
										}
										
									$out.= '</ul>';
								$out.= '</div>'; // PANEL
							
								if($conf->webservice->login && $conf->webservice_aktive) $login_show_name = $conf->webservice->login;
								else $login_show_name = $langs->trans('Login');								
						
								$out.= '<div data-theme="b" data-role="header">';								
									$out.= '<a href="#'.$pagename.'_panel" class="ui-btn ui-icon-bars ui-btn-icon-notext" style="border: none;"></a>';
										$out.= '<h1>'.$Pages_arr['#'.$pagename].'</h1>';	
									if($conf->webservice->on == 1) $out.= '<a href="#Login-'.$pagename.'" data-rel="popup" data-position-to="window" data-transition="pop">'.$login_show_name.'</a>';
								$out.= '</div>'; // HEADER					
								
								// Main
								$out.= '<div class="ui-content ui-page-theme-a" data-form="ui-page-theme-a" data-theme="a" role="main">';
									
									if(!isset($Pages_arr['notitle']['#'.$pagename]))
									$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';									
										if(!isset($Pages_arr['notitle']['#'.$pagename]))
										$out.= '<ul data-role="listview" data-divider-theme="b">';
										
										if(!isset($Pages_arr['notitle']['#'.$pagename]))
										$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">'.$Pages_arr['#'.$pagename].'</h1></li>';
										
											foreach($TypePage as $key => $type)
											{							
												if(is_numeric($key))
												{	
													if(!isset($Pages_arr['notitle']['#'.$pagename])) $out.= '<li>';
														$out.= $this->InputStandard($type, $Type_Status_arr);
													if(!isset($Pages_arr['notitle']['#'.$pagename])) $out.= '</li>';
												}
											}

										if(!isset($Pages_arr['notitle']['#'.$pagename]))
										$out.= '</ul>';
									if(!isset($Pages_arr['notitle']['#'.$pagename]))
									$out.= '</div>';	 // UI_BODY_A
									
									// DETAILS
									if(count ($TypePage['detail']['value']) >= 1)
									{
										$visibl = "";
										if($conf->webservice->on == 0 && $pagename == "conf") $visibl = 'style="display:none;"'; 
										$out.= '<div data-role="collapsible" id="'.$pagename.'-detail" data-theme="b" data-content-theme="a" '.$visibl.'>';
											$out.= '<h2>'.$TypePage['detail']['name'].'</h2>';
											$out.= '<ul data-role="listview">';
												
												if(is_array($TypePage['detail']['value']))
												{
													foreach($TypePage['detail']['value'] as $key_ex => $type_ex)
													{		
														if($key_ex != 'name')
														{
															$out.= '<li id="'.$type_ex.'DIV" class="ui-field-contain">'.$this->InputStandard($type_ex, $Type_Status_arr).'</li>';
														}
													}
												}
														
											$out.= '</ul>';
										$out.= '</div>'; // DETAILS		
									}
									
								$out.= '</div>'; // MAIN CONTENT
								
								$out.= '<div data-role="footer" data-theme="b">';						
									//if($Pages_arr[$pagename]['next'] == true) $out.= '<ul data-role="listview" data-inset="true"><li><a href="#info"><h1>Next</h1></a></li></ul>';
									if(!empty($Pages_arr['next']['name'][$pagename]) || !empty($Pages_arr['next']['nolink'][$pagename]))
									{
										if(!empty($Pages_arr['next']['nolink'][$pagename]))
										{
											$out.= $Pages_arr['next']['nolink'][$pagename];
										}
										else
										{
											$out.= '<ul data-role="listview" data-inset="true"><li><a href="#'.$Pages_arr['next']['name'][$pagename].'"><h1>'.$langs->trans('Next').'</h1></a></li></ul>';
										}
									}
									
								$out.= '</div>'; // FOOTER
								
								// POPUP
								foreach($Pages_arr['popup'] as $key => $popupname)
								{
									$TypePopup = $Type_arr[$popupname];
									
									$out.= '<div data-role="popup" id="'.$popupname.'-'.$pagename.'" data-theme="a" class="ui-corner-all" style="width: 100%;">';
										//$out.= '<form>';
																			
												//$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';									
													$out.= '<ul data-role="listview" data-divider-theme="b">';
													
													$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">'.$langs->trans('Title'.$popupname).'</h1></li>';
													
														foreach($TypePopup as $key => $type)
														{							
															if(is_numeric($key))
															{	
																$out.= '<li>';
																	$out.= $this->InputStandard($type, $Type_Status_arr);
																$out.= '</li>';
															}
														}
													
													$out.= '</ul>';
												//$out.= '</div>';	 // UI_BODY_A												
											
										//$out.= '</form>';
									$out.= '</div>';
								}
								
							$out.= '</div>'; // PAGE END
						}
					}					
		
			$out.= '</form>'; // FORM
			
			$out.= '<script>
							'.$this->script.'
							</script>';
			
			$out.= '</body>';
			$out.= 
			'
			<script>					
				';
					
					$depends = dependencies(); // from menu php
					
					$out.= '
									function dependencies_js()
									{';
									
						foreach($depends as $is_object => $depends_array)
						{							
							foreach($depends_array as $name_or_id => $depends_array_next)
							{
								foreach($depends_array_next as $object_name => $obj_arr)
								{										
									foreach($obj_arr as $condition => $condition_arr)
									{										
										foreach($condition_arr as $change_is => $change_to_arr)
										{											
											foreach($change_to_arr as $change_name_or_id => $change_to_array)
											{												
												foreach($change_to_array as $change_name => $change_to_val)
												{													
													if($name_or_id == "name")
													{
														$out.= 	'
																			if( $( "'.$is_object.'[name=\''.$object_name.'\']" ).val() == "'.$condition.'" )
																			{
																		';
													}
													else
													{
														$out.= 	'
																			if( $( "#'.$object_name.'" ).val() == "'.$condition.'" )
																			{
																		';
													}
													if($change_name_or_id == "name")
													{
														$out.= 	'
																			 $( "'.$change_is.'[name=\''.$change_name.'\']" ).val( "'.$change_to_val.'" );	
																			 $( "'.$change_is.'[name=\''.$change_name.'\']" ).selectmenu().selectmenu("refresh");				
																			 if($( "'.$change_is.'[name=\''.$change_name.'\']" ).is("select"))
																			 {
																			  	$( "'.$change_is.'[name=\''.$change_name.'\']" ).parent( ).find("a").addClass( "ui-btn-f" ); // its a select
																			 }
																			 else
																			 {
																				 $( "'.$change_is.'[name=\''.$change_name.'\']" ).parent( ).addClass( "ui-body-f" ); // its a input
																			 }
																	   }																
																	';
													}
													else
													{
														$out.= 	'
																			 $( "#'.$change_name.'" ).val( "'.$change_to_val.'" );	
																			 $( "#'.$change_name.'" ).selectmenu().selectmenu("refresh");					
																			 if($( "#'.$change_name.'" ).is("select"))
																			 {
																			  	$( "#'.$change_name.'" ).parent( ).find("a").addClass( "ui-btn-f" ); // its a select
																			 }
																			 else
																			 {
																				 $( "#'.$change_name.'" ).parent( ).addClass( "ui-body-f" ); // its a input
																			 }
																	   }															
																	';
													}				
												}
											}
										}
									}
								}
							}
						}
					$out.= '}';
					
					$langs_arr = $this->getlang();	
					
					foreach($langs_arr as $key => $langs_val)
					{
						
						$out.= '
										$( "#'.$key.'_Remove_Button" ).click(function() {
											$(this).parent("a").hide();			
											$(\'input[name="event['.$key.']"]\').val("");
											$(\'input[name="headline['.$key.']"]\').val("");
											$(\'input[name="description['.$key.']"]\').val("");
											$(\'input[name="instruction['.$key.']"]\').val("");
											$( "#'.$key.'_language_input" ).val("delete");
										});
									 ';
					}
					
					foreach($langs_arr as $key => $langs_val)
					{
						
						$out.= '$( "#'.$key.'_Button" ).click(function() {';
							$out.= '
											if($( "#'.$key.'_language_input" ).val() != "delete")
											{
												$( "#'.$key.'_language_input" ).val("'.$key.'");
											}
											else
											{
												$( "#'.$key.'_language_input" ).val("");
											}
											
											$( ".Lang_Button" ).each(function( index )
											{
												if( "'.$key.'_Button" == $(this).attr("id"))
												{
													$(this).css("box-shadow", "0px 0px 11px rgb(0, 126, 255)");
												}
												else
												{
													$(this).css("box-shadow", "");
												}
											});
											
											$( ".lang_input" ).each(function( index )
											{
												if( "'.$key.'" == $(this).attr("id"))
												{
													$(this).show();
												}
												else
												{
													$(this).hide();
												}					
											});				
							';			
						$out.= '});';
					}
					
				$out.= '
				
			</script>';
			
			return $out;
		}
		
		/**
		 * Function to install the interface of the Cap PHP library
		 *
		 * @return	string 	$out
		 */
		function CapView($content, $ID)
		{
			global $conf, $langs;
			
			$out = $this->Header_llx();
			
			$out.= '<body>';			
				$out.= '<form method="POST" id="capform" name="capform" action="index.php?webservice=1" enctype="multipart/form-data" data-ajax="false">';
					$out.= '<input type="hidden" name="filename" value="'.$ID.'">';
					$out.= '<div data-role="page" id="capview">';
					
						$out.= '<div data-theme="b" data-role="header">';								
							//$out.= '<a href="#'.$pagename.'_panel" class="ui-btn ui-icon-bars ui-btn-icon-notext" style="border: none;"></a>';
							$out.= '<a href="index.php" data-ajax="false" data-theme="b" class="ui-btn ui-icon-delete ui-btn-icon-notext" style="border: none;">'.$langs->trans("Cancel").'</a>';
							$out.= '<h1>'.$ID.'.cap</h1>';						
						$out.= '</div>';
					
						$out.= '<div role="main" class="ui-content">';							
										
							$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';	
								$out.= '<ul data-role="listview" data-divider-theme="b">';
									
									$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">'.$langs->trans("LabelCapViewOf").': '.$ID.'.cap</h1></li>';	
									
									if($conf->cap->save == 1) $out.= '<li><a href="'.$conf->cap->output.'/'.$ID.'.cap" download data-ajax="false">Download '.$ID.'.cap</a></li>';
									
									if($conf->webservice->on == 1) $out.= '<li><input type="submit" value="<h1>'.$langs->trans("sendviaSoap").'</h1>" data-ajax="false"></li>';
									
									$out.= '<li>';
										$out.= '<textarea readonly>';						
											$out.= $content;
										$out.= '</textarea>';
									$out.= '</li>';
								$out.= '</ul>';
							$out.= '</div>';

						$out.= '</div><!-- /content -->';
					
						$out.= '<div data-role="footer" data-theme="b">';

						$out.= '</div><!-- /footer -->';
						
					$out.= '</div><!-- /page -->';
			
				$out.= '</form>';			
			$out.= '</body>';
			
			return $out;
		}
		
		function ListCap()
		{
			global $conf, $langs;
			
			if(file_exists('menu/standard_menu.lib.php') && empty($conf->optional_menu))
			{
				include 'menu/standard_menu.lib.php';
			}
			elseif(!empty($conf->optional_menu))
			{
				include addslashes($conf->optional_menu);
			}
			else
			{
				die('Can\'t load standard_menu.lib.php please download menu/standard_menu.lib.php from https://github.com/AT-backbone/Cap-PHP-library');
			}
			
			$out = $this->Header_llx();
			
			$Type_arr = Types(); // TYPES FOR PAGES
			$Pages_arr = Pages(); // PAGES

			$out.= '<body>';			
				$out.= '<form method="POST" id="capform" name="capform" action="index.php?conv=1" enctype="multipart/form-data" data-ajax="false">';
					$out.= '<div data-role="page" id="capview">';
					
							$out.= '<div data-role="panel" data-display="push" id="'.$pagename.'_panel">';
    						$out.= '<!-- panel content goes here -->';
    						$out.= '<ul data-role="listview">';
    							
    							$out.= '<li style="height: 91px;">';
    								$out.= '<img src="conf/logo.jpg" style="border: 1px solid black;border-radius: 45px;width: 20%;margin: 10px 0px 0px 10px;">';
    								$out.= '<h1>';
    									$out.= 'Cap Creator';
    								$out.= '</h1>';
    								$out.= '<br>';
    								$out.= '<span style="font-size: 10px;">';
    									$out.= 'Cap v1.1';
    								$out.= '</span>';
    							$out.= '</li>';
    							
									foreach($Pages_arr as $link => $Page_Name)
									{
										if(!in_array($link, $Pages_arr['noajax'])) $data = 'data-ajax="false"'; // turn all links to ajax off (when not jquery can not link to the other pages)
										if($link != 'noajax')
										{
											if($link == '?conv=1#capconv') 	$out.= '<li data-theme="b"><a href="'.$link.'" '.$data.'>'.$Page_Name.'</a></li>';
											else 														$out.= '<li><a href="'.$_SERVER[PHP_SELF].$link.'" '.$data.'>'.$Page_Name.'</a></li>';
										}
										unset($data);
									}
									
								$out.= '</ul>';
							$out.= '</div>';
							
							$out.= '<div data-theme="b" data-role="header">';								
								$out.= '<a href="#'.$pagename.'_panel" class="ui-btn ui-icon-bars ui-btn-icon-notext" style="border: none;"></a>';
								$out.= '<h1>Cap Converter</h1>';							
							$out.= '</div>';
					
						$out.= '<div role="main" class="ui-content">';							
										
							$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';	
								/*								
								// get all convert files
								$std_tmp = scandir('convert/');								
								foreach($std_tmp as $num => $filename)
								{
									if(substr($filename, 0, 4) != "std_") 
									{
										unset($std_tmp[$num]);
									}
									else
									{
										$std_converter[substr($filename, 4, -9)] = substr($filename, 4, -9);
									}
								}
								
								$area_tmp = scandir('convert/');								
								foreach($area_tmp as $num => $filename)
								{
									if(substr($filename, 0, 5) != "area_") 
									{
										unset($area_tmp[$num]);
									}
									else
									{
										$area_converter[substr($filename, 5, -9)] = substr($filename, 5, -9);
									}
								}

								
								$std = $this->buildSelect("stdconverter", $std_converter, "data-native-menu=\"false\"", "", "standard");
								$area = $this->buildSelect("areaconverter", $area_converter, "data-native-menu=\"false\"", "", "standard"); 
								
									$out.= '<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true" id="converter">';
										$out.= '<legend>'.$langs->trans("SelectStdAreaCap").': '.$this->tooltip('SelectStdAreaCaptool', $langs->trans("InfoSelectStdAreaCap")).'</legend>';							
											$out.= $std;					
											$out.= $area;							
									$out.= '</fieldset>';
								*/
								
								// get all convert files
								$converter_tmp = scandir('convert/');								
								foreach($converter_tmp as $num => $filename)
								{
									if(substr($filename, 0, 5) != "conv_") 
									{
										unset($converter_tmp[$num]);
									}
									else
									{
										$converter[substr($filename, 5, -9)] = substr($filename, 5, -9);
									}
								}
								
								$input = $this->buildSelect("inputconverter", $converter, "data-native-menu=\"false\"", "", "standard");
								$output = $this->buildSelect("outputconverter", $converter, "data-native-menu=\"false\"", "", "standard"); 
								
									$out.= '<fieldset data-role="controlgroup" data-type="horizontal" data-mini="true" id="converter">';
										$out.= '<legend>'.$langs->trans("SelectInputandOutputCap").': '.$this->tooltip('SelectInputandOutputCaptool', $langs->trans("InfoSelectInputandOutputCap")).'</legend>';							
											$out.= $input;					
											$out.= $output;							
									$out.= '</fieldset>';
									
									
									$out.= '<input type="file" name="uploadfile" id="uploadfile">';
									// or								
									$out.= '<fieldset data-role="controlgroup">';
										$out.= '<legend>'.$langs->trans("SelectCaps").':</legend>';
											foreach(scandir($conf->cap->output) as $num => $capfilename)
											{
												if($num > 1)
												{
													$out.= '<input type="radio" name="location" id="cap_file_'.$num.'" value="'.urlencode($capfilename).'">';
													$out.= '<label for="cap_file_'.$num.'">'.$capfilename.'</label>';
												}
											}			
									$out.= '</fieldset>';
									
									$out.= '<input type="submit" value="<h1>'.$langs->trans("Convert").'</h1>" data-ajax="false">';
									
							$out.= '</div>';

						$out.= '</div><!-- /content -->';
					
						$out.= '<div data-role="footer" data-theme="b">';

						$out.= '</div><!-- /footer -->';
						
					$out.= '</div><!-- /page -->';
			
				$out.= '</form>';			
			$out.= '</body>';
			
			return $out;
		}
		
		function Webservice($ID)
		{
			global $conf, $langs, $out;
			
			$out = $this->Header_llx();
			
			$out.= '<body>';			
				$out.= '<form method="POST" id="capform" name="capform" action="index.php?conf=1" enctype="multipart/form-data" >';
					/**
					 *
					 *  WEBSERVICE
					 *
					 */
					 if($conf->webservice->on == 1)
					 {
					 	
					 	$out.= '<div data-role="page" id="capview">';
							
							// HEADER
							$out.= '<div data-theme="b" data-role="header">';								
								//$out.= '<a href="#'.$pagename.'_panel" class="ui-btn ui-icon-bars ui-btn-icon-notext" style="border: none;"></a>';
								$out.= '<a href="index.php" data-ajax="false" data-theme="b" class="ui-btn ui-icon-delete ui-btn-icon-notext" style="border: none;">'.$langs->trans("Cancel").'</a>';
								$out.= '<h1>'.$ID.'.cap</h1>';						
							$out.= '</div>';
						
							// MAIN
							$out.= '<div role="main" class="ui-content">';							
											
								$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';	
									
									// decryp password
									$conf->webservice->password = $this->encrypt_decrypt(2, $conf->webservice->password);
									
									include("lib/cap.webservices.php");
									
									$conf->webservice->password = $this->encrypt_decrypt(1, $conf->webservice->password);
									
								$out.= '</div>';
	
							$out.= '</div><!-- /content -->';
						
							// FOOTER
							$out.= '<div data-role="footer" data-theme="b">';
	
							$out.= '</div><!-- /footer -->';
							
						 $out.= '</div><!-- /page -->';
					 }
					/**
					 *
					 *  WEBSERVICE
					 *
					 */
					$out.= '</form>';			
				$out.= '</body>';
			
			return $out;
		}
		
		/**
		 * Function to conect the identifier to one string
		 *
		 * @return	array 	$_POST
		 */
		function MakeIdentifier($post)
		{
			if(!empty($post[identifier][WMO]) || ! empty($post[identifier][ISO]) || ! empty($post[identifier][time])) 
			{
				$temp = "";
				$i = 0;
				foreach($post[identifier] as $id_val)
				{
					if($i == 0)
					{
						$temp.= $id_val;
					}
					else
					{
						$temp.= ".".$id_val;					
					}
					if(!empty($id_val)) $i++;
				}
				
				unset($post[identifier]);
				$post[identifier] = $temp;
			}
			else
			{
				$temp = $post[identifier][ID];
				unset($post[identifier]);
				$post[identifier] = $temp;
			}
			return $post;
		}
		
		/*
		function login_page()
		{
			global $conf, $langs;
	
				//$out.= '<form method="POST" id="login_form" name="login_form" action="index.php?login=1" enctype="multipart/form-data" >';
			
					$out.= '<div data-role="page" id="login">';

						$out.= '<div data-role="header">';
							$out.= '<h1>Login to an Webservice</h1>';
						$out.= '</div><!-- /header -->';
					
							$out.= '<div role="main" class="ui-content">';							
											
								$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';									
									$out.= '<ul data-role="listview" data-divider-theme="b">';
										
										$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">Configuration</h1></li>';
	
										
									
									$out.= '</ul>';								
								$out.= '</div>';	
	
								$out.= '<input type="submit" value="Submit" data-theme="a">';
	
							$out.= '</div><!-- /content -->';
					
						$out.= '<div data-role="footer">';
						$out.= '</div><!-- /footer -->';
						
					$out.= '</div><!-- /page -->';
					
				//$out.= '</form>';
			
			return $out;
		}
		*/
		
		/**
		 * Function to install the interface of the Cap PHP library
		 *
		 * @return	string 	$out
		 */
		function install()
		{
			include 'menu/standard_menu.lib.php';
			
			$out = $this->Header_llx();
			
			$out.= '<body>';			
				$out.= '<form method="POST" id="capform" name="capform" action="index.php?conf=1" enctype="multipart/form-data" >';
			
					$out.= '<div data-role="page">';

						$out.= '<div data-role="header">';
							$out.= '<h1>Install Cap PHP Library Interface</h1>';
						$out.= '</div><!-- /header -->';
					
						$out.= '<div role="main" class="ui-content">';							
										
							$out.= '<div data-theme="a" data-form="ui-body-a" class="ui-body ui-body-a ui-corner-all">';									
								$out.= '<ul data-role="listview" data-divider-theme="b">';
									
									$out.= '<li data-role="list-divider" data-theme="b"><h1 style="font-size:22px;">Configuration</h1></li>';

									$Type_arr = $this->Types();
									foreach($Type_arr['conf'] as $key => $type)
									{							
										if(is_numeric($key))
										{	
											$out.= '<li>';
												$out.= $this->InputStandard($type);
											$out.= '</li>';
										}
									}	
								
								$out.= '</ul>';								
							$out.= '</div>';	
							
								if(count ($Type_arr['conf']['detail']) >= 1)
								{
									$out.= '<div data-role="collapsible" data-theme="b" data-content-theme="a">';
										$out.= '<h2>Webservice</h2>';
										$out.= '<ul data-role="listview">';
	
											foreach($Type_arr['conf']['detail'] as $key_ex => $type_ex)
											{		
												$out.= '<li id="'.$type_ex.'DIV" class="ui-field-contain">'.$this->InputStandard($type_ex).'</li>';
											}						
															
										$out.= '</ul>';
									$out.= '</div>';		
								}
							
							$out.= '<input type="submit" value="Submit" data-theme="a">';

						$out.= '</div><!-- /content -->';
					
						$out.= '<div data-role="footer">';
							$out.= '<h4>office@backbone.co.at</h4>';
						$out.= '</div><!-- /footer -->';
						
					$out.= '</div><!-- /page -->';
			
				$out.= '</form>';			
			$out.= '</body>';
			
			return $out;
		}
		
		/**
		 * Function to save the conf post information to the conf
		 *
		 * @return	null
		 */	
		function PostToConf($post)
		{	
			global $conf;
			
			if(! is_dir($post['cap']['output']))
			{
				mkdir($post['cap']['output'], 0774);				
			}
			
			if(! is_dir($post['conf']['output']))
			{
				mkdir($post['conf']['output'], 0774);
			}
			/*
			 * Special
			 */
		 	
			 // set langs
			$lang_arr = $post['lang'];
			unset($post['lang']);
			foreach($lang_arr as $lang_key => $lang_name)
			{			 	 
			 	if($lang_key != "key" && $lang_name != "name" && $lang_key != "remove")
			 	{
			 		$conf->lang[$lang_key] = $lang_name;
		 		}
		 	}
 	
 				// conf[lang][remove][en-GB]:remove -> conf[lang][remove][remove]:en-GB
			$rmv_lang_arr = array_flip($lang_arr['remove']);
			unset($post['lang']['remove']);
			foreach($conf->lang as $lang_key => $lang_name)
			{			 	 
			 	if(in_array($lang_key, $rmv_lang_arr))
			 	{
			 		unset($conf->lang[$lang_key]);
			 	}
		 	}
			 
			// set visible langs
			$lang_arr = $post['select']['lang'];
			unset($post['select']);
			foreach($conf->select->lang as $lang_name => $lang_boolen)
			{			 	 
			 	if(in_array($lang_name, $lang_arr))
			 	{
			 		$conf->select->lang[$lang_name] = 1;
			 	}
			 	else
			 	{
			 		$conf->select->lang[$lang_name] = 0;
			 	}
		 	}
			 
			// specifie the automatic time set
			if($post['identifier']['time']['on'] == "on")
		 	{
			 	$conf->identifier->time->on = 1;
			}	
			else
			{
			 	$conf->identifier->time->on = 0;
			}		
			unset($post['identifier']['time']);
				
			if($post['cap']['save'] == "on")
		 	{
			 	$conf->cap->save = 1;
			}	
			else
			{
			 	$conf->cap->save = 0;
			}		
			unset($post['cap']['save']);
			
			if($post['webservice']['on'] == "on")
		 	{
			 	$conf->webservice->on = 1;
			}	
			else
			{
			 	$conf->webservice->on = 0;
			}		
			unset($post['webservice']['on']);
			
			// crypt pass
			if($conf->webservice->password == $post['webservice']['password']) 
			{
				
			}
			else
			{
				$conf->webservice->password = $this->encrypt_decrypt(1, $post['webservice']['password']);
				unset($post['webservice']['password']);
			}
			
			/* 
			 * Reguler
			 */
			if(is_array($post))
			{
				foreach($post as $obj_name => $obj_val)
				{
					
					if(is_array($obj_val))
					{
						foreach($obj_val as $obj_2_name => $obj_2_val)
						{
						
							if(is_array($obj_2_val))
							{
								foreach($obj_2_val as $obj_3_name => $obj_3_val)
								{
									$conf->{$obj_name}->{$obj_2_name}->{$obj_3_name} = $obj_3_val;
								} // Level 2
							}
							else
							{
								$conf->{$obj_name}->{$obj_2_name} = $obj_2_val;
							}
							
						} // Level 1
					}
					else
					{
						$conf->{$obj_name}->{$obj_1_name} = $obj_1_val;
					}
					
				} // Base
			}
			else
			{
				$conf->{$obj_name} = $obj_val;
			}
			
			print_r($post);
			print_r($conf);
		}
	
		/**
		 * Function to chnge Configuration in the conf.php file
		 *
		 * @return	null
		 */	
		function WriteConf($write = true)
		{			
			global $conf;
			
			$out = "<?php"."\n";
			$out.= "date_default_timezone_set('".$conf->timezone->set_default."');"."\n";
			// CONF BASE
			if(is_object($conf) || is_array($conf_arr))
			{
				foreach($conf as $conf_name => $conf_arr)
				{
					
					// LEVEL 1
					if(is_object($conf_arr) || is_array($conf_arr))
					{
						foreach($conf_arr as $conf_name_var => $conf_val)
						{
							
							// LEVEL 2
							if(is_object($conf_val) || is_array($conf_val))
							{
								foreach($conf_val as $conf_name_level_2_var => $conf_level_2_val)
								{								
									if(is_array($conf_val))
									{
										$space = $this->ConfSpaces("$"."conf->".$conf_name."->".$conf_name_var."['".$conf_name_level_2_var."']");
										if(!is_numeric($conf_level_2_val)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
										$out.= "$"."conf->".$conf_name."->".$conf_name_var."['".$conf_name_level_2_var."']".$space."= ".$string_or_number.$conf_level_2_val.$string_or_number.";"."\n";
									}
									elseif(is_object($conf_val))
									{ 
										$space = $this->ConfSpaces("$"."conf->".$conf_name."->".$conf_name_var."->".$conf_name_level_2_var);
										if(!is_numeric($conf_level_2_val)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
										$out.= "$"."conf->".$conf_name."->".$conf_name_var."->".$conf_name_level_2_var.$space."= ".$string_or_number.$conf_level_2_val.$string_or_number.";"."\n";
									}
								} // foreach conf_val								
							} // is_array conf_val
							else
							{				
								if(is_array($conf_arr))
								{
									$space = $this->ConfSpaces("$"."conf->".$conf_name."['".$conf_name_var."']");
									if(!is_numeric($conf_val)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
									$out.= "$"."conf->".$conf_name."['".$conf_name_var."']".$space."= ".$string_or_number.$conf_val.$string_or_number.";"."\n";
								}
								elseif(is_object($conf_arr))
								{
									$space = $this->ConfSpaces("$"."conf->".$conf_name."->".$conf_name_var);
									if(!is_numeric($conf_val)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
									$out.= "$"."conf->".$conf_name."->".$conf_name_var.$space."= ".$string_or_number.$conf_val.$string_or_number.";"."\n";
								}
							} // else is_array conf_val
							
						} // foreach conf_arr
					} // is_array conf_arr
					else
					{
						if(is_array($conf_arr))
						{
							$space = $this->ConfSpaces("$"."conf['".$conf_name."']");
							if(!is_numeric($conf_arr)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
							$out.= "$"."conf['".$conf_name."']".$space."= ".$string_or_number.$conf_arr.$string_or_number.";"."\n";
						}
						elseif(is_object($conf_arr))
						{
							$space = $this->ConfSpaces("$"."conf->".$conf_name);
							if(!is_numeric($conf_arr)){ $string_or_number = "'"; }else{ $string_or_number = ""; }
							$out.= "$"."conf->".$conf_name.$space."= ".$string_or_number.$conf_arr.$string_or_number.";"."\n";
						}
					} // else is_object conf_arr					
					$out.= "\n";
					
				} // foreach conf
			} // is_array conf
			else
			{
				$write = false;
				print 'FAIL TO READ CONF';	
			} // else is_object conf
					
			$out.= "?>";
			
			if($write == true)
			{
				$conf_file = fopen("conf/conf.php", "w") or print("Unable to open conf!");
				fwrite($conf_file, $out);
				fclose($conf_file);
			}
			else
			{
				print ($out);
			}
		}		
		
		function ConfSpaces($string)
		{
			//$space = '                                                     '; // 55 spaces Standard
			$space = '';
			$i = (55 - strlen($string));
			while( $i > 0 )
			{ 
				$space.= ' '; 
				$i--;
			}
			return $space;
		}
	}
	
?>